/* 
 * File: pqueue_model.seh
 * Description: 
 *       This file declares a model interface of the queue with priorities.
 *
 * Copyright (c) 2003 ISP RAS.
 * B.Communisticheskaya,25, Moscow, Russia.
 * All rights reserved.
 *
 */


#ifndef __PQUEUE_MODEL_SEH__
#define __PQUEUE_MODEL_SEH__

/*
 * The pqueue model describes functionality of a queue with two priorities.
 * The dequeue operation returns a value with high priority in the first place
 * and does not change order of values with equal priorities.
 * Values stored are nonnull pointers.
 */

#include <atl/void_ast.h>
#include <atl/list.h>


/*
 * The definition of the Item type that contains nonnull pointers.
 */
invariant typedef void* Item;


/*
 * The definition of the Queue type that is a list of nonnull pointers.
 */
invariant typedef List Queue;


/*
 * The model state of the queue with priorities.
 *
 * The low queue contains items with low priority.
 * The high queue contains items with high priority.
 */
extern Queue* low;
extern Queue* high;


/*
 * The declaration of enq_spec() specification function.
 *
 * This function enqueues the item to the queue with low priority.
 *
 * The parameter item is a nonnull pointer.
 */
specification void enq_spec(Item item)
     reads   item
     reads   high
     updates low
;

/*
 * The declaration of enqp_spec() specification function.
 *
 * This function enqueues the item to the queue with high priority.
 *
 * The parameter item is a nonnull pointer.
 */
specification void enqp_spec(Item item)
     reads   item
     updates high
     reads   low
;

/*
 * The declaration of deq_spec() specification function.
 *
 * This function dequeues the item from the queue.
 *
 * The function returns 
 *     the first item enqueued into the queue with high priority 
 *         if such item is in the queue,
 *     the first item enqueued into the queue with low priority
 *         if such item is in the queue,
 *     NULL
 *         otherwise.
 */
specification void* deq_spec(void)
     updates high
     updates low
;


#endif
