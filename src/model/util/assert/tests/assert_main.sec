/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "util/assert/tests/assert_main.seh"

#ifdef UTIL_ASSERT_LOCAL_MAIN

#include "common/init.seh"

#include "common/common_media.seh"
#include "common/common_scenario.seh"
#include "common/control_center.seh"

#include "config/system_config.seh"
#include "system/system/system_model.seh"
#include "process/process/process_model.seh"
#include "process/process/process_media.seh"
#include "system/sysconf/sysconf_media.seh"
#include "system/user/user_media.seh"
#include "process/meta/user_media.seh"
#include "fs/dir/dir_media.seh"
#include "fs/fs/fs_media.seh"

#include "util/assert/assert_media.seh"


/********************************************************************/
/**                     Test System Initialization                 **/
/********************************************************************/
void reinitTestSystem(void)
{
    reinitControlCenter();
    initCommonModel();
    initCommonMedia();
    initCommonScenarioState();

    initSystemConfiguration();
    initPathSystemConfiguration();
    initSystemModel();
    initProcessModel();

    initSystemSysconfSubsystem();
    initSystemUserSubsystem();
    initProcessMetaUserSubsystem();
    initProcessProcessSubsystem();
    initFsDirSubsystem();
    initFsFsSubsystem();

    initUtilAssertSubsystem();
}

int main(int argc, char** argv)
{
    initTestSystem();
    loadSUT();

    // Set up tracer
    //setTraceEncoding("windows-1251");

    // Run test scenario
    addTraceToFile("trace.xml");
    //addTraceToFile("trace.xml_CTesK");
    main_util_assert(argc, argv);

    //  unloadSUT();
    return 0;
}

#endif



bool main_util_assert(int argc, char** argv)
{/**/
    util_assert_simple_assert_scenario(argc, argv);

    util_assert_err_scenario  ( argc, argv );
    util_assert_error_scenario( argc, argv );
    util_assert_errx_scenario ( argc, argv );
    util_assert_verrx_scenario( argc, argv );
    util_assert_warn_scenario ( argc, argv );
    util_assert_warnx_scenario( argc, argv );/**/

    return true;
}
