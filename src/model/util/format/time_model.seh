/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef UTIL_FORMAT_TIME_MODEL_SEH
#define UTIL_FORMAT_TIME_MODEL_SEH

#include "common/common_model.seh"


/********************************************************************/
/**                      TmT Data Type                             **/
/********************************************************************/

specification typedef struct TmT
{
    IntT     tm_sec;
    IntT     tm_min;
    IntT     tm_hour;
    IntT     tm_mday;
    IntT     tm_mon;
    IntT     tm_year;
    IntT     tm_wday;
    IntT     tm_yday;
    IntT     tm_isdst;
    LongT    tm_gmtoff;
    CString *tm_zone;
} TmT;

TmT* create_TmT (
                 IntT     tm_sec,
                 IntT     tm_min,
                 IntT     tm_hour,
                 IntT     tm_mday,
                 IntT     tm_mon,
                 IntT     tm_year,
                 IntT     tm_wday,
                 IntT     tm_yday,
                 IntT     tm_isdst,
                 LongT    tm_gmtoff,
                 CString *tm_zone
                );

/********************************************************************/
/**                      Helper Data Types                         **/
/********************************************************************/

typedef struct TmTAnsw
{
    bool bSec;
    bool bMin;
    bool bHour;
    bool bMDay;
    bool bMon;
    bool bYear;
    bool bWDay;
    bool bYDay;
    bool bIsDst;

    IntT Error;

    IntT tm_sec;
    IntT tm_min;
    IntT tm_hour;
    IntT tm_mday;
    IntT tm_mon;
    IntT tm_year;
    IntT tm_wday;
    IntT tm_yday;
    IntT tm_isdst;

    char* reqs;
} TmTAnsw;

bool isRight_TmTAnsw(TmT* tm, TmTAnsw answ);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** getdate_spec **/
/* TODO: If corrRes == NULL, the specification does not check the result of execution. */
specification
TmT* getdate_spec(CallContext context, CString* str, TmTAnsw corrRes, IntTObj * getdate_err );

/** strftime_spec **/
specification
SizeT strftime_spec(CallContext context, CString* s, SizeT maxsize, CString* format, TmT* timeptr);

/** strptime_spec **/
specification
CString* strptime_spec (
                        CallContext       context,
                        CString*          buf,
                        CString*          format,
                        TmT*              timeptr,
                        const TmTAnsw    *corrRes
                       );


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/


#endif

