/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef UTIL_FORMAT_SCANF_MODEL_SEH
#define UTIL_FORMAT_SCANF_MODEL_SEH

#include "common/common_model.seh"
#include "process/process/process_common.seh"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** fscanf_spec **/
specification
IntT fscanf_spec( CallContext context, FILETPtr * stream, CString * format, List /* NULL */ * arguments,
                  ErrorCode * errno, CString * fileForStreamName
                );

/** scanf_spec **/
specification
IntT scanf_spec( CallContext context, CString * format, List /* NULL */ * arguments, CString * input, ErrorCode * errno );

/** sscanf_spec **/
specification
IntT sscanf_spec( CallContext context, CString * s, CString * format, List /* NULL */ * arguments, ErrorCode * errno );

/** vfscanf_spec **/
specification
IntT vfscanf_spec( CallContext context, FILETPtr * stream, CString * format, List /* NULL */ * arguments,
                   ErrorCode * errno, CString * fileForStreamName
                 );

/** vscanf_spec **/
specification
IntT vscanf_spec( CallContext context, CString * format, List /* NULL */ * arguments, CString * input, ErrorCode * errno );

/** vsscanf_spec **/
specification
IntT vsscanf_spec( CallContext context, CString * s, CString * format, List /* NULL */ * arguments, ErrorCode * errno );

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

bool checkScanfPreconditions( char * funcName, CString * format, List /* NULL */ * arguments );

String * toString_List( List /* NULL */ * list );

bool checkScanfResult( char * funcName, CString * format, List /* NULL */ * arguments,
                       IntT returnValue, CString * input, ErrorCode * errno
                     );

#endif
