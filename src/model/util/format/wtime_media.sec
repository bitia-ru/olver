/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "util/format/wtime_media.seh"
#include "common/common_media.seh"
#include "util/string/wcasecmp_media.seh"
#include "util/format/time_media.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initUtilFormatWtimeSubsystem(void)
{
   // Set up mediators
    set_mediator_wcsftime_spec(wcsftime_media);

    // Set up formatters
    registerTSFormatter("timetm",(TSFormatterFuncType)timetm_formatter);

}


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** wcsftime_spec **/
mediator wcsftime_media for specification
SizeT wcsftime_spec( CallContext context, WStringTPtr wcs, SizeT maxsize, WStringTPtr format, TmT* timeptr)
{
    call
    {
        SizeT funcRes;
        
        TSCommand command = create_TSCommand();
        
        format_TSCommand( &command, "wcsftime:$(ptr)$(size)$(ptr)$(timetm)", create_VoidTPtrObj(wcs),create_SizeTObj(maxsize), create_VoidTPtrObj(format), timeptr );
        
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            funcRes = readSize_TSStream(&command.response);
            
        }
        
        destroy_TSCommand(&command);
        
        return funcRes;
  }
}







