/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef UTIL_FORMAT_SHEAFS_SEH
#define UTIL_FORMAT_SHEAFS_SEH

#include "common/common_media.seh"

/********************************************************************/
/**                          Sheaf Atoms                           **/
/********************************************************************/

specification typedef
struct PrintedSheafAtom
{
    CString           * formatFragment;
    Object            * data          ;
    CString           * resultFragment;
    bool                mustBeLast    ;
    List /* String */ * reqIds        ;
} PrintedSheafAtom;

specification typedef
struct WprintedSheafAtom
{
    WString           * formatFragment;
    Object            * data          ;
    WString           * resultFragment;
    bool                mustBeLast    ;
    List /* String */ * reqIds        ;
} WprintedSheafAtom;

specification typedef
struct ScanedSheafAtom
{
    CString           * formatFragment;
    CString           * data          ;
    Object            * resultFragment;
    Object            * placeFragment ;
    List /* String */ * reqIds        ;
} ScanedSheafAtom;

specification typedef
struct WscanedSheafAtom
{
    WString           * formatFragment;
    WString           * data          ;
    Object            * resultFragment;
    Object            * placeFragment ;
    List /* String */ * reqIds        ;
} WscanedSheafAtom;

/* ... == "reqId1", ..., "reqIdn", NULL */
PrintedSheafAtom  * create_PrintedSheafAtom ( char * format, Object * data, bool mustBeLast, char   * result, ... );
WprintedSheafAtom * create_WprintedSheafAtom( char * format, Object * data, bool mustBeLast, char   * result, ... );
ScanedSheafAtom   * create_ScanedSheafAtom  ( char * format,                                 Object * result,
                                                                                             Object * place ,
                                                             char   * data,                                   ... );
WscanedSheafAtom  * create_WscanedSheafAtom ( char * format,                                 Object * result,
                                                                                             Object * place ,
                                                             char   * data,                                   ... );

/********************************************************************/
/**                              Sheaf                             **/
/********************************************************************/

specification typedef
struct PrintedSheaf
{
    CString           * format;
    List /* NULL */   * data  ;
    CString           * result;
    List /* String */ * reqIds;
} PrintedSheaf;

specification typedef
struct WprintedSheaf
{
    WString           * format;
    List /* NULL */   * data  ;
    WString           * result;
    List /* String */ * reqIds;
} WprintedSheaf;

specification typedef
struct ScanedSheaf
{
    CString           * format;
    CString           * data  ;
    List /* NULL */   * result;
    List /* NULL */   * place ;
    List /* String */ * reqIds;
} ScanedSheaf;

specification typedef
struct WscanedSheaf
{
    WString           * format;
    WString           * data  ;
    List /* NULL */   * result;
    List /* NULL */   * place ;
    List /* String */ * reqIds;
} WscanedSheaf;

PrintedSheaf  * create_PrintedSheaf ( void );
WprintedSheaf * create_WprintedSheaf( void );
ScanedSheaf   * create_ScanedSheaf  ( void );
WscanedSheaf  * create_WscanedSheaf ( void );

PrintedSheaf  * append_PrintedSheaf ( PrintedSheaf  * self, PrintedSheafAtom  * x );
WprintedSheaf * append_WprintedSheaf( WprintedSheaf * self, WprintedSheafAtom * x );
ScanedSheaf   * append_ScanedSheaf  ( ScanedSheaf   * self, ScanedSheafAtom   * x );
WscanedSheaf  * append_WscanedSheaf ( WscanedSheaf  * self, WscanedSheafAtom  * x );

#endif
