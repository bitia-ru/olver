/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef UTIL_FORMAT_WSCANF_MEDIA_SEH
#define UTIL_FORMAT_WSCANF_MEDIA_SEH

#include "util/format/wscanf_model.seh"
#include "process/process/process_common.seh"

/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/

void initUtilFormatWscanfSubsystem(void);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** fwscanf_spec **/
mediator fwscanf_media for specification
IntT fwscanf_spec( CallContext context, FILETPtr * stream, WString * format, List /* NULL */ * arguments,
                   ErrorCode * errno, CString * fileForStreamName
                 );

/** swscanf_spec **/
mediator swscanf_media for specification
IntT swscanf_spec( CallContext context, WString * s, WString * format, List /* NULL */ * arguments, ErrorCode * errno );

/** vfwscanf_spec **/
mediator vfwscanf_media for specification
IntT vfwscanf_spec( CallContext context, FILETPtr * stream, WString * format, List /* NULL */ * arguments,
                    ErrorCode * errno, CString * fileForStreamName
                  );

/** vswscanf_spec **/
mediator vswscanf_media for specification
IntT vswscanf_spec( CallContext context, WString * s, WString * format, List /* NULL */ * arguments, ErrorCode * errno );

/** vwscanf_spec **/
mediator vwscanf_media for specification
IntT vwscanf_spec
         ( CallContext context, WString * format, List /* NULL */ * arguments, WString * input, ErrorCode * errno );

/** wscanf_spec **/
mediator wscanf_media for specification
IntT wscanf_spec( CallContext context, WString * format, List /* NULL */ * arguments, WString * input, ErrorCode * errno );

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

IntT oneOfWscanfCall( CallContext context, char * funcName, List /* NULL */ * arguments, WString * wInput,
                      ErrorCode * errno, TimeInterval * stimulTime
                    );

#endif
