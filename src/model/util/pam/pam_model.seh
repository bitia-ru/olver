/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef UTIL_PAM_MODEL_SEH
#define UTIL_PAM_MODEL_SEH

#include "common/common_model.seh"
#include "util/pam/libpam_definitions.seh"

typedef VoidTPtr PamHandleT;

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** pam_acct_mgmt_spec **/
specification
IntT pam_acct_mgmt_spec( CallContext context, PamHandleT pamh, IntT flags );

/** pam_authenticate_spec **/
specification
IntT pam_authenticate_spec( CallContext context, PamHandleT pamh, IntT flags );

/** pam_chauthtok_spec **/
specification
IntT pam_chauthtok_spec( CallContext context, PamHandleT pamh, IntT flags );

/** pam_close_session_spec **/
specification
IntT pam_close_session_spec( CallContext context, PamHandleT pamh, IntT flags );

/** pam_end_spec **/
specification
IntT pam_end_spec( CallContext context, PamHandleT pamh, IntT pam_status );

/** pam_fail_delay_spec **/
specification
IntT pam_fail_delay_spec( CallContext context, PamHandleT pamh, UIntT micro_sec );

/** pam_get_item_spec **/
specification
IntT pam_get_item_spec( CallContext context, PamHandleT pamh, IntT item_type, VoidTPtr * item );

/** pam_getenvlist_spec **/
specification
List /* CString */ * pam_getenvlist_spec( CallContext context, PamHandleT pamh );

/** pam_open_session_spec **/
specification
IntT pam_open_session_spec( CallContext context, PamHandleT pamh, IntT flags );

/** pam_set_item_spec **/
specification
IntT pam_set_item_spec( CallContext context, PamHandleT pamh, IntT item_type, VoidTPtr item );

/** pam_setcred_spec **/
specification
IntT pam_setcred_spec( CallContext context, PamHandleT pamh, IntT flags );

/** pam_start_spec **/
specification
IntT pam_start_spec
         ( CallContext context, CString * service_name, CString * username, IntT pam_conversation, PamHandleT * pamh );

/** pam_strerror_spec **/
specification
CString * pam_strerror_spec( CallContext context, PamHandleT pamh, IntT errnum );

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

static CString * strPamResult( IntT res );

#endif
