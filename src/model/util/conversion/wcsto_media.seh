/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
mediator media for specification
#ifndef ParameterGroupExists
    mytype spec( CallContext context, WStringTPtr nptr, WStringTPtr * endptr, IntT base, ErrorCode * errno )
#else
    mytype spec( CallContext context, WStringTPtr nptr, WStringTPtr * endptr, IntT base, ErrorCode * errno, IntT group )
#endif
{
    call
    {
        TSCommand command = create_TSCommand();
        mytype ret=0;

        format_TSCommand( &command, func_name":$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=read_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}

#undef media
#undef spec
#undef mytype
#undef func_name
#undef read_TSStream
#ifdef ParameterGroupExists
    #undef ParameterGroupExists
#endif
