/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef UTIL_CONVERSION_TOKEN_MODEL_SEH
#define UTIL_CONVERSION_TOKEN_MODEL_SEH

#include "common/common_model.seh"
#include "process/process/process_model.seh"

specification typedef struct StrSepResult
{
    StringTPtr ret;
    StringTPtr parameter;
} StrSepResult;
/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** strsep_spec **/
specification
StrSepResult* strsep_spec( CallContext context, StringTPtr stringp,
                                                            StringTPtr delim);
CString* strsep_model(CString* stringp_past, CString* delim_str, bool* NoToken);
/** strtok_spec **/
specification
StringTPtr strtok_spec( CallContext context, StringTPtr stringp,
                                                            StringTPtr delim);
void OnStrtok( CallContext context, StringTPtr stringp, StringTPtr delim,
                    StringTPtr ret, StringTPtr* buffer_ptr, CByteArray* buffer,
                    StringTPtr ps_buf_pre, StringTPtr buff);
/** strtok_r_spec **/
specification
StringTPtr strtok_r_spec( CallContext context, StringTPtr stringp,
                                        StringTPtr delim, StringTPtr* buffer);
/** __strtok_r_spec **/
specification
StringTPtr __strtok_r_spec( CallContext context, StringTPtr stringp,
                                        StringTPtr delim, StringTPtr* buffer);
/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

StrSepResult* create_StrSepResult(StringTPtr rt, StringTPtr param);
bool CorrectBuffChange(CByteArray* byte_pre, CByteArray* byte_past, IntT begin, CString* delim);
IntT RetBeginPos(CByteArray* byte_pre, IntT begin, CString* delim_str);
IntT NoDelim(CByteArray* byte_pre, IntT begin, CString* delim_str);
bool NoToken(CallContext context, StringTPtr ptr, CString* delim_str);

#endif

