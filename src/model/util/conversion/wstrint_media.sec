/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "util/conversion/wstrint_media.seh"
#include "common/common_media.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initUtilConversionWstrintSubsystem(void)
{
  // Set up mediators
    set_mediator_wcstol_spec(wcstol_media);
    set_mediator___wcstol_internal_spec(__wcstol_internal_media);
    set_mediator_wcstoll_spec(wcstoll_media);
    set_mediator_wcstoq_spec(wcstoq_media);
    set_mediator_wcstoimax_spec(wcstoimax_media);

    set_mediator_wcstoul_spec(wcstoul_media);
    set_mediator___wcstoul_internal_spec(__wcstoul_internal_media);
    set_mediator_wcstoull_spec(wcstoull_media);
    set_mediator_wcstouq_spec(wcstouq_media);
    set_mediator_wcstoumax_spec(wcstoumax_media);
}


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/
/** wcstol_spec **/
#define media wcstol_media
#define spec wcstol_spec
#define mytype LongT
#define func_name "wcstol"
#define read_TSStream readLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstol_media for specification
LongT wcstol_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        LongT ret=0;

        format_TSCommand( &command, "wcstol:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/


/** wcstoll_spec **/
#define media wcstoll_media
#define spec wcstoll_spec
#define mytype LLongT
#define func_name "wcstoll"
#define read_TSStream readLLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstoll_media for specification
LLongT wcstoll_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        LLongT ret=0;

        format_TSCommand( &command, "wcstoll:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readLLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/

/** wcstoq_spec **/
#define media wcstoq_media
#define spec wcstoq_spec
#define mytype LLongT
#define func_name "wcstoq"
#define read_TSStream readLLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstoq_media for specification
LLongT wcstoq_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        LLongT ret=0;

        format_TSCommand( &command, "wcstoq:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readLLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/

/** wcstoul_spec **/
#define media wcstoul_media
#define spec wcstoul_spec
#define mytype ULongT
#define func_name "wcstoul"
#define read_TSStream readULong_TSStream
#include "wcsto_media.seh"

/*mediator wcstoul_media for specification
ULongT wcstoul_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        ULongT ret=0;

        format_TSCommand( &command, "wcstoul:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readULong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/


/** wcstoull_spec **/
#define media wcstoull_media
#define spec wcstoull_spec
#define mytype ULLongT
#define func_name "wcstoull"
#define read_TSStream readULLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstoull_media for specification
ULLongT wcstoull_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        ULLongT ret=0;

        format_TSCommand( &command, "wcstoull:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readULLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/


/** __wcstol_internal_spec **/
#define media __wcstol_internal_media
#define spec __wcstol_internal_spec
#define mytype LongT
#define func_name "__wcstol_internal"
#define read_TSStream readLong_TSStream
#define ParameterGroupExists
#include "wcsto_media.seh"

/*mediator __wcstol_internal_media for specification
LongT __wcstol_internal_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        LongT ret=0;

        format_TSCommand( &command, "__wcstol_internal:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/

/** __wcstoul_internal_spec **/
#define media __wcstoul_internal_media
#define spec __wcstoul_internal_spec
#define mytype ULongT
#define func_name "__wcstoul_internal"
#define read_TSStream readULong_TSStream
#define ParameterGroupExists
#include "wcsto_media.seh"

/*mediator __wcstoul_internal_media for specification
ULongT __wcstoul_internal_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        ULongT ret=0;

        format_TSCommand( &command, "__wcstoul_internal:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readULong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/


/** wcstoimax_spec **/
#define media wcstoimax_media
#define spec wcstoimax_spec
#define mytype IntMaxT
#define func_name "wcstoimax"
#define read_TSStream readLLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstoimax_media for specification
IntMaxT wcstoimax_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        IntMaxT ret=0;

        format_TSCommand( &command, "wcstoimax:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readLLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/

/** wcstoumax_spec **/
#define media wcstoumax_media
#define spec wcstoumax_spec
#define mytype UIntMaxT
#define func_name "wcstoumax"
#define read_TSStream readULLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstoumax_media for specification
UIntMaxT wcstoumax_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        UIntMaxT ret=0;

        format_TSCommand( &command, "wcstoumax:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readULLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}*/


/** wcstouq_spec **/
#define media wcstouq_media
#define spec wcstouq_spec
#define mytype ULLongT
#define func_name "wcstouq"
#define read_TSStream readULLong_TSStream
#include "wcsto_media.seh"

/*mediator wcstouq_media for specification
ULLongT wcstouq_spec( CallContext context, WStringTPtr nptr,
                                        WStringTPtr* endptr, IntT base, ErrorCode* errno)
{
    call
    {
        TSCommand command = create_TSCommand();
        ULLongT ret=0;

        format_TSCommand( &command, "wcstouq:$(ptr)$(int)$(int)",
                                create_VoidTPtrObj(nptr),
                                create_IntTObj(endptr==NULL?1:0),
                                create_IntTObj(base));
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;

            ret=readULLong_TSStream(&command.response);
            if(endptr!=NULL)
                *endptr=readPointer_TSStream(context, &command.response);
            *errno=readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return ret;
    }
}
*/


