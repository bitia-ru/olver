/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "util/conversion/strint_media.seh"
#include "common/common_media.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initUtilConversionStrintSubsystem(void)
{
  // Set up mediators
    set_mediator___strtol_internal_spec(__strtol_internal_media);
    set_mediator___strtoll_internal_spec(__strtoll_internal_media);
    set_mediator___strtoul_internal_spec(__strtoul_internal_media);
    set_mediator___strtoull_internal_spec(__strtoull_internal_media);
    set_mediator_a64l_spec(a64l_media);
    set_mediator_atoi_spec(atoi_media);
    set_mediator_atol_spec(atol_media);
    set_mediator_atoll_spec(atoll_media);
    set_mediator_l64a_spec(l64a_media);
    set_mediator_strtoimax_spec(strtoimax_media);
    set_mediator_strtol_spec(strtol_media);
    set_mediator_strtoll_spec(strtoll_media);
    set_mediator_strtoq_spec(strtoq_media);
    set_mediator_strtoul_spec(strtoul_media);
    set_mediator_strtoull_spec(strtoull_media);
    set_mediator_strtoumax_spec(strtoumax_media);
    set_mediator_strtouq_spec(strtouq_media);
}


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** __strtol_internal_spec **/
#define mediatype LongT
#define func_name "__strtol_internal"
#define read_TSStream readLong_TSStream
#define media_name __strtol_internal_media
#define spec_name __strtol_internal_spec
#define ParameterGroupExists
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name
#undef ParameterGroupExists

/** __strtoll_internal_spec **/
#define mediatype LLongT
#define func_name "__strtoll_internal"
#define read_TSStream readLLong_TSStream
#define media_name __strtoll_internal_media
#define spec_name __strtoll_internal_spec
#define ParameterGroupExists
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name
#undef ParameterGroupExists

/** __strtoul_internal_spec **/
#define mediatype ULongT
#define func_name "__strtoul_internal"
#define read_TSStream readULong_TSStream
#define media_name __strtoul_internal_media
#define spec_name __strtoul_internal_spec
#define ParameterGroupExists
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name
#undef ParameterGroupExists

/** __strtoull_internal_spec **/
#define mediatype ULLongT
#define func_name "__strtoull_internal"
#define read_TSStream readULLong_TSStream
#define media_name __strtoull_internal_media
#define spec_name __strtoull_internal_spec
#define ParameterGroupExists
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name
#undef ParameterGroupExists

/** a64l_spec **/
mediator a64l_media for specification
LongT a64l_spec( CallContext context, CString* str )
{
    call
    {
        LongT res;
        TSCommand command = create_TSCommand();

        format_TSCommand( &command, "a64l:$(str)",
            str);

        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res=readLong_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return res;
    }
}


/** atoi_spec **/
#define mediatype IntT
#define func_name "atoi"
#define read_TSStream readInt_TSStream
#define media_name atoi_media
#define spec_name atoi_spec
#include "ato_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** atol_spec **/
#define mediatype LongT
#define func_name "atol"
#define read_TSStream readLong_TSStream
#define media_name atol_media
#define spec_name atol_spec
#include "ato_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** atoll_spec **/
#define mediatype LLongT
#define func_name "atoll"
#define read_TSStream readLLong_TSStream
#define media_name atoll_media
#define spec_name atoll_spec
#include "ato_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name

/** l64a_spec **/

mediator l64a_media for specification
CString* l64a_spec( CallContext context, LongT value )
{
    call
    {
        CString* res;
        TSCommand command = create_TSCommand();

        format_TSCommand( &command, "l64a:$(long)",
            create_LongTObj(value));

        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res=readCString_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return res;
    }
}



/** strtoimax_spec **/
#define mediatype IntMaxT
#define func_name "strtoimax"
#define read_TSStream readLLong_TSStream
#define media_name strtoimax_media
#define spec_name strtoimax_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** strtol_spec **/
#define mediatype LongT
#define func_name "strtol"
#define read_TSStream readLong_TSStream
#define media_name strtol_media
#define spec_name strtol_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** strtoll_spec **/
#define mediatype LLongT
#define func_name "strtoll"
#define read_TSStream readLLong_TSStream
#define media_name strtoll_media
#define spec_name strtoll_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** strtoq_spec **/
#define mediatype LLongT
#define func_name "strtoq"
#define read_TSStream readLLong_TSStream
#define media_name strtoq_media
#define spec_name strtoq_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** strtoul_spec **/
#define mediatype ULongT
#define func_name "strtoul"
#define read_TSStream readULong_TSStream
#define media_name strtoul_media
#define spec_name strtoul_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name


/** strtoull_spec **/
#define mediatype ULLongT
#define func_name "strtoull"
#define read_TSStream readULLong_TSStream
#define media_name strtoull_media
#define spec_name strtoull_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name




/** strtoumax_spec **/
#define mediatype UIntMaxT
#define func_name "strtoumax"
#define read_TSStream readULLong_TSStream
#define media_name strtoumax_media
#define spec_name strtoumax_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name

/** strtouq_spec **/
#define mediatype ULLongT
#define func_name "strtouq"
#define read_TSStream readULLong_TSStream
#define media_name strtouq_media
#define spec_name strtouq_spec
#include "strto_media.seh"
#undef mediatype
#undef media_name
#undef spec_name
#undef read_TSStream
#undef func_name



