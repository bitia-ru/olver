/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef UTIL_STRING_STR_MEDIA_SEH
#define UTIL_STRING_STR_MEDIA_SEH

#include "util/string/str_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initUtilStringStrSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** __stpcpy_spec **/
mediator __stpcpy_media for specification
StringTPtr __stpcpy_spec(CallContext context, StringTPtr dest, StringTPtr src);

/** __strdup_spec **/
mediator __strdup_media for specification
StringTPtr __strdup_spec( CallContext context, StringTPtr s1, ErrorCode* errno);

/** stpcpy_spec **/
mediator stpcpy_media for specification
StringTPtr stpcpy_spec(CallContext context, StringTPtr dest, StringTPtr src);

/** stpncpy_spec **/
mediator stpncpy_media for specification
StringTPtr stpncpy_spec(CallContext context, StringTPtr dest, StringTPtr src, SizeT n);

/** strcat_spec **/
mediator strcat_media for specification
StringTPtr strcat_spec(CallContext context, StringTPtr s1, StringTPtr s2);

/** strchr_spec **/
mediator index_media for specification
StringTPtr index_spec(CallContext context, StringTPtr s, IntT c);

/** strchr_spec **/
mediator strchr_media for specification
StringTPtr strchr_spec(CallContext context, StringTPtr s, IntT c);

/** strcmp_spec **/
mediator strcmp_media for specification
IntT strcmp_spec( CallContext context, StringTPtr s1, StringTPtr s2);

/** strcpy_spec **/
mediator strcpy_media for specification
StringTPtr strcpy_spec(CallContext context, StringTPtr s1, StringTPtr s2);

/** strcspn_spec **/
mediator strcspn_media for specification
SizeT strcspn_spec(CallContext context, StringTPtr s1, StringTPtr s2);

mediator strdup_media for specification
StringTPtr strdup_spec(CallContext context, StringTPtr s1, ErrorCode* errno);

/** strlen_spec **/
mediator strlen_media for specification
SizeT strlen_spec(CallContext context, StringTPtr s);

/** strncat_spec **/
mediator strncat_media for specification
StringTPtr strncat_spec(CallContext context, StringTPtr s1, StringTPtr s2, SizeT n);

/** strncmp_spec **/
mediator strncmp_media for specification
IntT strncmp_spec(CallContext context, StringTPtr s1, StringTPtr s2, SizeT n);

/** strncpy_spec **/
mediator strncpy_media for specification
StringTPtr strncpy_spec(CallContext context, StringTPtr s1, StringTPtr s2, SizeT n);

/** strndup_spec **/
mediator strndup_media for specification
StringTPtr strndup_spec(CallContext context, StringTPtr s, SizeT n, ErrorCode* errno);

/** strnlen_spec **/
mediator strnlen_media for specification
SizeT strnlen_spec(CallContext context, StringTPtr s, SizeT n);

/** strpbrk_spec **/
mediator strpbrk_media for specification
StringTPtr strpbrk_spec(CallContext context, StringTPtr s1, StringTPtr s2);

/** strrchr_spec **/
mediator strrchr_media for specification
StringTPtr strrchr_spec(CallContext context, StringTPtr s, IntT c);

/** rindex_spec **/
mediator rindex_media for specification
StringTPtr rindex_spec(CallContext context, StringTPtr s, IntT c);

/** strspn_spec **/
mediator strspn_media for specification
SizeT strspn_spec(CallContext context, StringTPtr s1, StringTPtr s2);

/** strstr_spec **/
mediator strstr_media for specification
StringTPtr strstr_spec(CallContext context, StringTPtr s1, StringTPtr s2);


#endif

