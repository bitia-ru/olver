/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef UTIL_STRING_WMEM_MODEL_SEH
#define UTIL_STRING_WMEM_MODEL_SEH

#include "common/common_model.seh"

/********************************************************************/
/**                         Common Coverage                        **/
/********************************************************************/

/*
 * Linux Standard Base Specific Assertion
 *
 * Assertion: sizeof(wchar_t) == sizeof(wint_t)
 *   Always true within 
 *     Linux Standard Base Core Specification 3.1
 *     Copyright (c) 2004, 2005 Free Standards Group
 *
 *     See section 'Data Definitions for libc'.
 */

#define SPECIAL_WCHAR_COVERAGE(ws1, n) \
    coverage C_ZeroChar \
    { \
        if(!isNULL_VoidTPtr(wmemchr_model(ws1, NULL_WCharT,  n))) \
        { \
            return {ZeroChar, #ws1  " contains NULL character"}; \
        } \
        else if(!isNULL_VoidTPtr(wmemchr_model(ws1, WEOF_WIntT,  n))) \
        { \
            return {WeofChar, #ws1 " contains WEOF value"}; \
        } \
        else \
        { \
            return {GeneralCase, "General case for " #ws1}; \
        } \
    } 

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** wmemchr_spec **/
specification
WCharTPtr wmemchr_spec( CallContext context, WCharTPtr ws, WCharT wc, SizeT n);
WCharTPtr wmemchr_model(WCharTPtr ws, WCharT wc, SizeT n);

/** wmemcmp_spec **/
specification
IntT wmemcmp_spec(CallContext context, WCharTPtr ws1, WCharTPtr ws2, SizeT n );
IntT wmemcmp_model(WCharTPtr s1, WCharTPtr s2, SizeT n);

/** wmemcpy_spec **/
specification
WCharTPtr wmemcpy_spec( CallContext context, WCharTPtr ws1, WCharTPtr ws2,
                       SizeT n );

/** wmemmove_spec **/
specification
WCharTPtr wmemmove_spec( CallContext context, WCharTPtr ws1, WCharTPtr ws2,
                        SizeT n );

/** wmemset_spec **/
specification
WCharTPtr wmemset_spec(CallContext context, WCharTPtr ws, WCharT wc, SizeT n );

/********************************************************************/
/**                      Helper Functions                          **/
/********************************************************************/

SizeT countWArrayWChars(WCharTPtr ws, WCharT wc,  SizeT n);

WCharTPtr wmemrchr_model(WCharTPtr ws, WCharT wc, SizeT n);

#endif

