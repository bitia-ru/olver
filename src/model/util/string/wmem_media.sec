/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "util/string/wmem_media.seh"
#include "common/common_media.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initUtilStringWmemSubsystem(void)
{
  // Set up mediators
    set_mediator_wmemchr_spec(wmemchr_media);
    set_mediator_wmemcmp_spec(wmemcmp_media);
    set_mediator_wmemcpy_spec(wmemcpy_media);
    set_mediator_wmemmove_spec(wmemmove_media);
    set_mediator_wmemset_spec(wmemset_media);
}


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** wmemchr_spec **/
mediator wmemchr_media for specification
WCharTPtr wmemchr_spec( CallContext context, WCharTPtr ws, WCharT wc, SizeT n)
{
    call
    {
        TSCommand command = create_TSCommand();
        WCharTPtr  res = NULL_VoidTPtr;
        
        format_TSCommand( &command, "wmemchr:$(ptr)$(wchar)$(size)",
            create_VoidTPtrObj(ws),
            create_WCharTObj(wc),
            create_SizeTObj(n)
            );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readPointer_TSStream( context, &command.response );
        }
        
        destroy_TSCommand(&command);
        
        return res;
    }
}


/** wmemcmp_spec **/
mediator wmemcmp_media for specification
IntT wmemcmp_spec(CallContext context, WCharTPtr ws1, WCharTPtr ws2, SizeT n )
{
    call
    {
        TSCommand command = create_TSCommand();
        IntT  res = 0;
        
        format_TSCommand( &command, "wmemcmp:$(ptr)$(ptr)$(size)",
            create_VoidTPtrObj(ws1),
            create_VoidTPtrObj(ws2),
            create_SizeTObj(n)
            );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readInt_TSStream( &command.response );
        }
        
        destroy_TSCommand(&command);
        
        return res;
    }
}


/** wmemcpy_spec **/
mediator wmemcpy_media for specification
WCharTPtr wmemcpy_spec( CallContext context, WCharTPtr ws1, WCharTPtr ws2,
                       SizeT n )
{
    call
    {
        TSCommand command = create_TSCommand();
        WCharTPtr  res = NULL_VoidTPtr;
        
        format_TSCommand( &command, "wmemcpy:$(ptr)$(ptr)$(size)",
            create_VoidTPtrObj(ws1),
            create_VoidTPtrObj(ws2),
            create_SizeTObj(n)
            );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readPointer_TSStream(context, &command.response );
        }
        
        destroy_TSCommand(&command);
        
        return res;
    }
}


/** wmemmove_spec **/
mediator wmemmove_media for specification
WCharTPtr wmemmove_spec( CallContext context, WCharTPtr ws1, WCharTPtr ws2,
                        SizeT n )
{
    call
    {
        TSCommand command = create_TSCommand();
        WCharTPtr  res = NULL_VoidTPtr;
        
        format_TSCommand( &command, "wmemmove:$(ptr)$(ptr)$(size)",
            create_VoidTPtrObj(ws1),
            create_VoidTPtrObj(ws2),
            create_SizeTObj(n)
            );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readPointer_TSStream(context, &command.response );
        }
        
        destroy_TSCommand(&command);
        
        return res;
    }
}

/** wmemset_spec **/
mediator wmemset_media for specification
WCharTPtr wmemset_spec( CallContext context, WCharTPtr ws, WCharT wc, SizeT n )
{
    call
    {
        TSCommand command = create_TSCommand();
        WCharTPtr  res = NULL_VoidTPtr;

        
        format_TSCommand( &command, "wmemset:$(ptr)$(wchar)$(size)", 
            create_VoidTPtrObj(ws),
            create_WCharTObj(wc),
            create_SizeTObj(n)
            );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readPointer_TSStream( context, &command.response );
        }
        
        destroy_TSCommand(&command);
        
        return res;
  }
}



