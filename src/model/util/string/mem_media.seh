/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef UTIL_STRING_MEM_MEDIA_SEH
#define UTIL_STRING_MEM_MEDIA_SEH

#include "util/string/mem_model.seh"


/********************************************************************/
/**            Util String Mem Subsystem Initialization            **/
/********************************************************************/
void initUtilStringMemSubsystem(void);


/********************************************************************/
/**                       Interface Functions                      **/
/********************************************************************/

/** __mempcpy_spec **/
mediator __mempcpy_media for specification
VoidTPtr __mempcpy_spec( CallContext context, VoidTPtr dest, VoidTPtr src,
                        SizeT n );

/** __rawmemchr_spec **/
mediator __rawmemchr_media for specification
VoidTPtr __rawmemchr_spec(CallContext context, VoidTPtr s, IntT c);

/** bcmp_spec **/
mediator bcmp_media for specification
IntT bcmp_spec( CallContext context, VoidTPtr s1, VoidTPtr s2, SizeT n );

/** bcopy_spec **/
mediator bcopy_media for specification
void bcopy_spec( CallContext context, VoidTPtr s1, VoidTPtr s2, SizeT n );

/** bzero_spec **/
mediator bzero_media for specification
void bzero_spec(CallContext context, VoidTPtr s, SizeT n );

/** memccpy_spec **/
mediator memccpy_media for specification
VoidTPtr memccpy_spec( CallContext context, VoidTPtr s1, VoidTPtr s2, IntT c,
                      SizeT n );

/** memchr_spec **/
mediator memchr_media for specification
VoidTPtr memchr_spec(CallContext context, VoidTPtr s, IntT c, SizeT n );

/** memcmp_spec **/
mediator memcmp_media for specification
IntT memcmp_spec( CallContext context, VoidTPtr s1, VoidTPtr s2, SizeT n );

/** memcpy_spec **/
mediator memcpy_media for specification
VoidTPtr memcpy_spec( CallContext context, VoidTPtr s1, VoidTPtr s2, SizeT n );

/** memmem_spec **/
mediator memmem_media for specification
VoidTPtr memmem_spec( CallContext context, VoidTPtr haystack,
                     SizeT haystacklen, VoidTPtr needle, SizeT needlelen);

/** memmove_spec **/
mediator memmove_media for specification
VoidTPtr memmove_spec(CallContext context, VoidTPtr s1, VoidTPtr s2, SizeT n );

/** memrchr_spec **/
mediator memrchr_media for specification
VoidTPtr memrchr_spec(CallContext context, VoidTPtr s, IntT c, SizeT n );

/** memset_spec **/
mediator memset_media for specification
VoidTPtr memset_spec(CallContext context, VoidTPtr s, IntT c, SizeT n );

/** swab_spec **/
mediator swab_media for specification
void swab_spec(CallContext context, VoidTPtr src, VoidTPtr dest,
               SSizeT nbytes );

/* 
   The group of functions 'util.string.mem' consists of: 
       __mempcpy [1]
       __rawmemchr [1]
       bcmp [2]
       bcopy [2]
       bzero [2]
       memccpy [2]
       memchr [2]
       memcmp [2]
       memcpy [2]
       memmem [2]
       memmove [2]
       memrchr [1]
       memset [2]
       swab [2]
 */


#endif
