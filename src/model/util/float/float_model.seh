/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef UTIL_FLOAT_MODEL_SEH
#define UTIL_FLOAT_MODEL_SEH

#include "common/common_model.seh"
#include "math/math/math_data.seh"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/
/*
specification
CString* util_float_test_spec( CallContext context, IntT a, CharT b,
                              VoidTPtr c, CString* str);

*/

/** __finite_spec **/
//This specification refers to: __finitef, __finite, __finitel
specification
IntT __finite_spec(CallContext context, Unifloat* x);

/** __fpclassify_spec **/
//This specification refers to: __fpclassifyf, __fpclassify
specification
IntT __fpclassify_spec(CallContext context, Unifloat* x);
IntT __fpclassify_model(Unifloat* x);

/** __isinf_spec **/
//This specification refers to: __isinff, __isinf, __isinfl
specification
IntT __isinf_spec(CallContext context, Unifloat* x);

/** __isnan_spec **/
//This specification refers to: __isnanf, __isnan, __isnanl
specification
IntT __isnan_spec(CallContext context, Unifloat* x);

/** __signbit_spec **/
//This specification refers to: __signbitf, __signbit
specification
IntT __signbit_spec(CallContext context, Unifloat* x, IntT *ExistFunction);

/** finite_spec **/
//This specification refers to: finitef, finite, finitel
specification
IntT finite_spec(CallContext context, Unifloat* x);

/** frexp_spec **/
//This specification refers to: frexpf, frexp, frexpl
specification
Unifloat* frexp_spec(CallContext context, Unifloat* x, IntT* exp);
Unifloat* frexp_model(Unifloat* x, IntT* exp);

/** ilogb_spec **/
//This specification refers to: ilogbf, ilogb, ilogbl
specification
IntT ilogb_spec(CallContext context, Unifloat* x, ErrorCode* errno);
LongT ilogb_model(Unifloat* x);

/** ldexp_spec **/
//This specification refers to: ldexpf, ldexp, ldexpl
specification
Unifloat* ldexp_spec(CallContext context, Unifloat* x, IntT exp,
                     ErrorCode* errno);
Unifloat* ldexp_model(Unifloat* x, IntT exp);

/** logb_spec **/
//This specification refers to: logbf, logb, logbl
specification
Unifloat* logb_spec(CallContext context, Unifloat* x, ErrorCode* errno);
Unifloat* logb_model(Unifloat* x);

/** nextafter_spec **/
//This specification refers to: nextafterf, nextafter, nextafterl
specification
Unifloat* nextafter_spec(CallContext context, Unifloat* x, Unifloat* y, 
                         ErrorCode* errno);
Unifloat* nextafter_model(Unifloat* x,  Unifloat* y);

/** nexttoward_spec **/
//This specification refers to: nexttowardf, nexttoward, nexttowardl
specification
Unifloat* nexttoward_spec( CallContext context, Unifloat* x, Unifloat* y, 
                         ErrorCode* errno);

/** scalb_spec **/
//This specification refers to: scalbf, scalb, scalbl
specification
Unifloat* scalb_spec(CallContext context, Unifloat* x, Unifloat* n,
                     ErrorCode* errno);
Unifloat* scalb_model(Unifloat* x, Unifloat* n);

/** scalbln_spec **/
//This specification refers to: scalblnf, scalbln, scalblnl
specification
Unifloat* scalbln_spec(CallContext context, Unifloat* x, LongT n,
                       ErrorCode* errno);
Unifloat* scalbln_model(Unifloat* x, LongT n);

/** scalbn_spec **/
//This specification refers to: scalbnf, scalbn, scalbnl
specification
Unifloat* scalbn_spec(CallContext context, Unifloat* x, IntT n, 
                      ErrorCode* errno);

/** significand_spec **/
//This specification refers to: significandf, significand, significandl
specification
Unifloat* significand_spec(CallContext context, Unifloat* x);
Unifloat* significand_model(Unifloat* x);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

