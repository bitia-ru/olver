/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef MEMORY_HEAP_MODEL_SEH
#define MEMORY_HEAP_MODEL_SEH

#include "common/common_model.seh"
#include "data/errno_model.seh"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** calloc_spec **/
specification
VoidTPtr calloc_spec(CallContext context, SizeT nelem, SizeT elsize, ErrorCode* errno);

void onCalloc(CallContext context, SizeT nelem, SizeT elsize, VoidTPtr calloc_spec);

/** free_spec **/
specification
void free_spec(CallContext context, VoidTPtr ptr);

void onFree(CallContext context, VoidTPtr ptr);

/** malloc_spec **/
specification
VoidTPtr malloc_spec(CallContext context, SizeT size, ErrorCode* errno);

void onMalloc(CallContext context, SizeT size, VoidTPtr malloc_spec);

/** posix_memalign_spec **/
specification
VoidTPtr posix_memalign_spec(CallContext context, SizeT alignment, SizeT size, ErrorCode* errno);

void onPosixMemalign(CallContext context, SizeT size, VoidTPtr posix_memalign_spec);

/** realloc_spec **/
specification
VoidTPtr realloc_spec(CallContext context, VoidTPtr ptr, SizeT size, ErrorCode* errno);

void onRealloc(CallContext context, VoidTPtr ptr, SizeT size, VoidTPtr realloc_spec, ErrorCode* errno);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/
bool isMallocAllowed(CallContext context);
bool isFreeAllowed(CallContext context);
bool isValidAlignment(SizeT alignment);
bool testMulOverflow_SizeT(SizeT m1, SizeT m2);

#endif

