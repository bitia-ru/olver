/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_TERMINAL_MODEL_SEH
#define NCURSES_TERMINAL_MODEL_SEH

#include "common/common_model.seh"
#include "ncurses/ncurses/ncurses_data.seh"


specification typedef struct InitScrReturnType
{
    WindowTPtr ptr;
    IntT cols;
    IntT lines;
}InitScrReturnType;

InitScrReturnType * create_InitScrReturnType(
    WindowTPtr ptr,
    IntT cols,
    IntT lines
    );

specification typedef struct NewTermReturnType
{
    WindowTPtr stdscr;
    IntT       cols;
    IntT       lines;
    VoidTPtr   SCREEN_ptr; 
    CString*   type;  
} NewTermReturnType;

NewTermReturnType * create_NewTermReturnType(
    WindowTPtr stdscr,
    IntT       cols,
    IntT       lines,
    VoidTPtr   SCREEN_ptr, 
    CString*   type
    );

specification typedef struct SetTermReturnType
{
    ScreenTPtr scr;
    WindowTPtr stdscr;
}SetTermReturnType;

SetTermReturnType * create_SetTermReturnType(
    ScreenTPtr scr,
    WindowTPtr stdscr
    );

specification typedef struct VidAttrReturnType
{
    IntT    retVal;
} VidAttrReturnType;

VidAttrReturnType * create_VidAttrReturnType(
    IntT retVal
    );

NCursesTerminal* findInitedTerminal(CallContext context, ScreenTPtr new_term);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** delay_output_spec **/
specification
IntT delay_output_spec( CallContext context, IntT ms);

/** delscreen_spec **/
specification
void delscreen_spec( CallContext context, ScreenTPtr scr);

void onDelScreen( CallContext context, ScreenTPtr scr);

/** endwin_spec **/
specification
IntT endwin_spec( CallContext context);

void onEndWin(CallContext context, IntT endwin_spec);

/** filter_spec **/
specification
void filter_spec( CallContext context);

void onFilter( CallContext context);

/** initscr_spec **/
specification
InitScrReturnType* initscr_spec( CallContext context);

void onInit_scr(CallContext context, InitScrReturnType* initscr_spec);

/** longname_spec **/
specification
CString* longname_spec( CallContext context);

/** newterm_spec **/
specification
NewTermReturnType* newterm_spec( CallContext context, CString* type, CString* outfile, CString* infile);

void onNewTerm(CallContext context, CString* type, CString* outfile, CString* infile, NewTermReturnType* newterm_spec);

/** set_term_spec **/
specification
SetTermReturnType* set_term_spec( CallContext context, ScreenTPtr new_term);

void onSetTerm(CallContext context, ScreenTPtr new_term, SetTermReturnType* set_term_spec);

/** termattrs_spec **/
specification
ChTypeT termattrs_spec( CallContext context);

/** vidattr_spec **/
//This specification refers to: vidattr, vidputs
specification
VidAttrReturnType* vidattr_spec( CallContext context, ChTypeT ch, bool usePutfunc);

void onVidattr( CallContext context, ChTypeT ch, VidAttrReturnType* vidattr_spec);

specification typedef
struct RipofflineInitfuncCallT
{
    CallContext context;
    WindowTPtr win;
    IntT columns;
} RipofflineInitfuncCallT;

RipofflineInitfuncCallT * create_RipofflineInitfuncCallT(
    CallContext context,
    WindowTPtr win,
    IntT columns
    );

reaction RipofflineInitfuncCallT* ripoffline_initfunc_call(void);

void onRipofflineInitfuncCall(RipofflineInitfuncCallT* data);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

