/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_TERMINAL_CONTROL_MEDIA_SEH
#define NCURSES_TERMINAL_CONTROL_MEDIA_SEH

#include "ncurses/terminal/control_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initNcursesTerminalControlSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** clearok_spec **/
mediator clearok_media for specification
IntT clearok_spec(CallContext context, WindowTPtr win, IntT bf);

/** echo_spec **/
mediator echo_media for specification
IntT echo_spec(CallContext context);

/** has_ic_spec **/
mediator has_ic_media for specification
IntT has_ic_spec(CallContext context);

/** has_il_spec **/
mediator has_il_media for specification
IntT has_il_spec(CallContext context);

/** idcok_spec **/
mediator idcok_media for specification
void idcok_spec(CallContext context, WindowTPtr win, IntT bf);

/** idlok_spec **/
mediator idlok_media for specification
IntT idlok_spec(CallContext context, WindowTPtr win, IntT bf);

/** immedok_spec **/
mediator immedok_media for specification
void immedok_spec(CallContext context, WindowTPtr win, IntT bf);

/** leaveok_spec **/
mediator leaveok_media for specification
IntT leaveok_spec(CallContext context, WindowTPtr win, IntT bf);

/** noecho_spec **/
mediator noecho_media for specification
IntT noecho_spec(CallContext context);

/** noqiflush_spec **/
mediator noqiflush_media for specification
void noqiflush_spec(CallContext context);

/** qiflush_spec **/
mediator qiflush_media for specification
void qiflush_spec(CallContext context);

/** scrollok_spec **/
mediator scrollok_media for specification
IntT scrollok_spec(CallContext context, WindowTPtr win, IntT bf);

/** setscrreg_spec **/
//This mediator refers to: setscrreg, wsetscrreg
mediator setscrreg_media for specification
IntT setscrreg_spec(CallContext context, WindowTPtr* win, IntT top, IntT bot);

/** use_env_spec **/
mediator use_env_media for specification
void use_env_spec(CallContext context, IntT boolval);

#endif
