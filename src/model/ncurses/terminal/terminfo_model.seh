/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_TERMINAL_TERMINFO_MODEL_SEH
#define NCURSES_TERMINAL_TERMINFO_MODEL_SEH

#include "common/common_model.seh"
#include "ncurses/ncurses/ncurses_data.seh"

specification typedef struct SetupTermReturnType
{
    IntT retVal;
    IntT errret;
    CString* returnedType;
    bool isTERMempty;
} SetupTermReturnType;

SetupTermReturnType * create_SetupTermReturnType
(
    IntT retVal,
    IntT errret,
    CString* returnedType,
    bool isTERMempty   
);

specification typedef struct SetCurTermReturnType
{
    TerminalTPtr oldTerm;
    VoidTPtr stdscr;
}SetCurTermReturnType;

SetCurTermReturnType * create_SetCurTermReturnType(
    TerminalTPtr oldTerm,
    VoidTPtr stdscr
    );

typedef enum PUTP_STANDARD_KEYS
{
        PUTP_CR,
        PUTP_CLEAR,
        PUTP_HOME
} PUTP_STANDARD_KEYS;

extern NCursesTerminfo* terminfo;

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** del_curterm_spec **/
specification
IntT del_curterm_spec(CallContext context, TerminalTPtr oterm);

void onDelCurTerm(CallContext context, TerminalTPtr oterm, IntT del_curterm_spec);

/** putp_spec **/
//This specification refers to: putp, tputs
specification
IntT putp_spec(CallContext context, CString* str, IntT affcnt, bool putfunc, IntT standardKey);

/** set_curterm_spec **/
specification
SetCurTermReturnType* set_curterm_spec(CallContext context, TerminalTPtr new_term);

void onSetCurterm(CallContext context, TerminalTPtr new_term, SetCurTermReturnType* set_curterm_spec);

/** setupterm_spec **/
//This specification refers to: restartterm, setupterm
specification
SetupTermReturnType* setupterm_spec(CallContext context, CString* term, bool restart);

void onSetupterm(CallContext context, CString* term, SetupTermReturnType* setupterm_spec);

/** termname_spec **/
specification
CString* termname_spec(CallContext context);

/** tigetflag_spec **/
specification
IntT tigetflag_spec(CallContext context, CString* capname);

/** tigetnum_spec **/
specification
IntT tigetnum_spec(CallContext context, CString* capname);

/** tigetstr_spec **/
specification
StringTPtr tigetstr_spec(CallContext context, CString* capname);

/** tparm_spec **/
specification
StringTPtr tparm_spec(CallContext context, CString* cap, LongT p1, LongT p2, LongT p3,
                      LongT p4, LongT p5, LongT p6, LongT p7, LongT p8, LongT p9);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif
