/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_TERMINAL_MEDIA_SEH
#define NCURSES_TERMINAL_MEDIA_SEH

#include "ncurses/terminal/terminal_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initNcursesTerminalSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

static void ripoffline_initfunc_call_processor(ThreadId threadId, TSStream* stream, TSMetaData* meta);

mediator ripoffline_initfunc_call_media for reaction 
RipofflineInitfuncCallT* ripoffline_initfunc_call(void);

/** delay_output_spec **/
mediator delay_output_media for specification
IntT delay_output_spec( CallContext context, IntT ms);

/** delscreen_spec **/
mediator delscreen_media for specification
void delscreen_spec( CallContext context, ScreenTPtr scr);

/** endwin_spec **/
mediator endwin_media for specification
IntT endwin_spec( CallContext context);

/** filter_spec **/
mediator filter_media for specification
void filter_spec( CallContext context);

/** initscr_spec **/
mediator initscr_media for specification
InitScrReturnType* initscr_spec( CallContext context);

/** longname_spec **/
mediator longname_media for specification
CString* longname_spec( CallContext context);

/** newterm_spec **/
mediator newterm_media for specification
NewTermReturnType* newterm_spec( CallContext context, CString* type, CString* outfile, CString* infile);

/** set_term_spec **/
mediator set_term_media for specification
SetTermReturnType* set_term_spec( CallContext context, ScreenTPtr new_term);

/** termattrs_spec **/
mediator termattrs_media for specification
ChTypeT termattrs_spec( CallContext context);

/** vidattr_spec **/
//This mediator refers to: vidattr, vidputs
mediator vidattr_media for specification
VidAttrReturnType* vidattr_spec( CallContext context, ChTypeT ch, bool usePutfunc);




#endif

