/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_SLK_MEDIA_SEH
#define NCURSES_SLK_MEDIA_SEH

#include "ncurses/slk/slk_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initNcursesSlkSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** slk_attrset_spec **/
mediator slk_attrset_media for specification
IntT slk_attrset_spec( CallContext context, ChTypeT attrs );

/** slk_attr_set_spec **/
mediator slk_attr_set_media for specification
IntT slk_attr_set_spec( CallContext context, NcursesAttrT attrs, ShortT color_pair_number, VoidTPtr opt );

/** slk_attroff_spec **/
mediator slk_attroff_media for specification
IntT slk_attroff_spec( CallContext context, ChTypeT attrs);

/** slk_attron_spec **/
mediator slk_attron_media for specification
IntT slk_attron_spec( CallContext context, ChTypeT attrs);

/** slk_color_spec **/
mediator slk_color_media for specification
IntT slk_color_spec( CallContext context, ShortT color_pair_number);

/** slk_clear_spec **/
mediator slk_clear_media for specification
IntT slk_clear_spec( CallContext context);

/** slk_init_spec **/
mediator slk_init_media for specification
IntT slk_init_spec( CallContext context, IntT fmt);

/** slk_label_spec **/
mediator slk_label_media for specification
CString * slk_label_spec( CallContext context, IntT labnum );

/** slk_refresh_spec **/
mediator slk_refresh_media for specification
IntT slk_refresh_spec( CallContext context );

/** slk_restore_spec **/
mediator slk_restore_media for specification
IntT slk_restore_spec( CallContext context);

/** slk_set_spec **/
mediator slk_set_media for specification
IntT slk_set_spec( CallContext context, IntT labnum, CString *label, IntT justify);

/** slk_noutrefresh_spec **/
mediator slk_noutrefresh_media for specification
IntT slk_noutrefresh_spec( CallContext context);

/** slk_touch_spec **/
mediator slk_touch_media for specification
IntT slk_touch_spec( CallContext context );

#endif

