/* 
 * File: ncurses/screen/screen_media.sec
 * 
 * Author:
 * Version:  $Id: screen_media.sec,v 1.5 2006/06/05 15:16:23 levenkov Exp $
 * 
 * Copyright (c) 2005 ISP RAS.
 * 25, B.Communisticheskaya, Moscow, Russia.
 * All rights reserved.
 */

#include "ncurses/ncurses/ncurses_data.seh"
#include "ncurses/screen/screen_media.seh"
#include "common/common_media.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initNcursesScreenSubsystem(void)
{
    // Set up mediators
    set_mediator_scr_dump_spec(scr_dump_media);
    set_mediator_scr_init_spec(scr_init_media);
    set_mediator_scr_restore_spec(scr_restore_media);
    set_mediator_scr_set_spec(scr_set_media);
}


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** scr_dump_spec **/
mediator scr_dump_media for specification
IntT scr_dump_spec(CallContext context, StringTPtr FileName)
{
    call
    {
        IntT res;

        TSCommand command = create_TSCommand();

        format_TSCommand(&command, "scr_dump:$(ptr)", create_VoidTPtrObj(FileName));
        executeCommandInContext(context, &command);
        if(!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return res;
    }
}

/** scr_init_spec **/
mediator scr_init_media for specification
IntT scr_init_spec(CallContext context, StringTPtr FileName)
{
    call
    {
        IntT res;

        TSCommand command = create_TSCommand();

        format_TSCommand(&command, "scr_init:$(ptr)", create_VoidTPtrObj(FileName));
        executeCommandInContext(context, &command);
        if(!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return res;
    }
}

/** scr_restore_spec **/
mediator scr_restore_media for specification
IntT scr_restore_spec(CallContext context, StringTPtr FileName)
{
    call
    {
        IntT res;

        TSCommand command = create_TSCommand();

        format_TSCommand(&command, "scr_restore:$(ptr)", create_VoidTPtrObj(FileName));
        executeCommandInContext(context, &command);
        if(!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return res;
    }

    state
    {
        updateNCursesWindowMayNULL(context, NULL);
    }
}

/** scr_set_spec **/
mediator scr_set_media for specification
IntT scr_set_spec(CallContext context, StringTPtr FileName)
{
    call
    {
        IntT res;

        TSCommand command = create_TSCommand();

        format_TSCommand(&command, "scr_set:$(ptr)", create_VoidTPtrObj(FileName));
        executeCommandInContext(context, &command);
        if(!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readInt_TSStream(&command.response);
        }

        destroy_TSCommand(&command);

        return res;
    }

    state
    {
        onNCursesUniversal(context, NULL, scr_set_spec);
    }
}






