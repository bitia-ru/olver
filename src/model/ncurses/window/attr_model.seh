/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_WINDOW_ATTR_MODEL_SEH
#define NCURSES_WINDOW_ATTR_MODEL_SEH

#include "common/common_model.seh"

specification typedef  struct AttrGetReturnType
{
    IntT          retVal;
    NcursesAttrT  attrs;
    IntT          color_pair_number;
}AttrGetReturnType;

AttrGetReturnType* create_AttrGetReturnType(IntT retVal, NcursesAttrT  attrs, IntT color_pair_number);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** attr_get_spec **/
//This specification refers to: wattr_get, attr_get
specification
AttrGetReturnType* attr_get_spec( CallContext context, WindowTPtr* win);

/** attr_off_spec **/
//This specification refers to: wattr_off, attr_off
specification
IntT attr_off_spec( CallContext context, WindowTPtr* win, NcursesAttrT attrs);

void onAttrOff( CallContext context, WindowTPtr* win, NcursesAttrT attrs);

/** attr_on_spec **/
//This specification refers to: wattr_on, attr_on
specification
IntT attr_on_spec( CallContext context,  WindowTPtr* win, NcursesAttrT attrs);

void onAttrOn( CallContext context, WindowTPtr* win, NcursesAttrT attrs);

/** attr_set_spec **/
//This specification refers to: wattr_set, wcolor_set, attr_set, color_set
specification
IntT attr_set_spec( CallContext context, WindowTPtr* win, NcursesAttrT* attr, IntT colorPair);

void onAttrSet( CallContext context, WindowTPtr* win, NcursesAttrT* attr, IntT colorPair);

/** attroff_spec **/
//This specification refers to: wattroff, attroff
specification
IntT attroff_spec( CallContext context, WindowTPtr* win, NcursesRestrictedAttrT attrs);

void onRestrictedAttroff( CallContext context, WindowTPtr* win, NcursesRestrictedAttrT attrs);

/** attron_spec **/
//This specification refers to: wattron, attron
specification
IntT attron_spec( CallContext context, WindowTPtr* win, NcursesRestrictedAttrT attrs);

void onRestrictedAttron( CallContext context, WindowTPtr* win, NcursesRestrictedAttrT attrs);

/** attrset_spec **/
//This specification refers to: wattrset, attrset
specification
IntT attrset_spec( CallContext context, WindowTPtr* win, NcursesRestrictedAttrT attrs);

void onRestrictedAttrset( CallContext context, WindowTPtr* win, NcursesRestrictedAttrT attrs);

/** standend_spec **/
//This specification refers to: wstandend, standend
specification
IntT standend_spec( CallContext context, WindowTPtr* win);

void onStandend( CallContext context, WindowTPtr* win);

/** standout_spec **/
//This specification refers to: wstandout, standout
specification
IntT standout_spec( CallContext context, WindowTPtr* win);

void onStandout( CallContext context, WindowTPtr* win);


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

