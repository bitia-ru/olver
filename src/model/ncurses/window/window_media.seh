/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_WINDOW_MEDIA_SEH
#define NCURSES_WINDOW_MEDIA_SEH

#include "ncurses/window/window_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initNcursesWindowSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** copywin_spec **/
mediator copywin_media for specification
IntT copywin_spec( CallContext context, WindowTPtr* srcwin, WindowTPtr* dstwin,
                  IntT sminrow, IntT smincol, IntT dminrow, IntT dmincol,
                  IntT dmaxrow, IntT dmaxcol, IntT overlay);

/** curs_set_spec **/
mediator curs_set_media for specification
IntT curs_set_spec( CallContext context, IntT visibility);

/** delwin_spec **/
mediator delwin_media for specification
IntT delwin_spec( CallContext context, WindowTPtr* win);

/** derwin_spec **/
mediator derwin_media for specification
WindowTPtr derwin_spec( CallContext context, WindowTPtr* orig, IntT nlines,
                       IntT ncols, IntT begin_y, IntT begin_x);

/** dupwin_spec **/
mediator dupwin_media for specification
WindowTPtr dupwin_spec( CallContext context, WindowTPtr* win);

/** getwin_spec **/
mediator getwin_media for specification
WindowTPtr getwin_spec( CallContext context, CString* filep);

/** intrflush_spec **/
mediator intrflush_media for specification
IntT intrflush_spec( CallContext context, WindowTPtr* win, IntT bf);

/** keypad_spec **/
mediator keypad_media for specification
IntT keypad_spec( CallContext context, WindowTPtr* win, IntT bf);

/** meta_spec **/
mediator meta_media for specification
IntT meta_spec( CallContext context, WindowTPtr* win, IntT bf);

/** mvderwin_spec **/
mediator mvderwin_media for specification
IntT mvderwin_spec( CallContext context, WindowTPtr* win,NCursesPosition* pos);

/** mvwin_spec **/
mediator mvwin_media for specification
IntT mvwin_spec( CallContext context, WindowTPtr* win, IntT y, IntT x);

/** newwin_spec **/
mediator newwin_media for specification
NewWinReturnType* newwin_spec( CallContext context, IntT nlines, IntT ncols, IntT begin_y, IntT begin_x);

/** nodelay_spec **/
mediator nodelay_media for specification
IntT nodelay_spec( CallContext context, WindowTPtr* win, IntT bf);

/** overlay_spec **/
mediator overlay_media for specification
IntT overlay_spec( CallContext context, WindowTPtr* srcwin,
                            WindowTPtr* dstwin);

/** overwrite_spec **/
mediator overwrite_media for specification
IntT overwrite_spec( CallContext context, WindowTPtr* srcwin,
                            WindowTPtr* dstwin);

/** putwin_spec **/
mediator putwin_media for specification
IntT putwin_spec( CallContext context, WindowTPtr* win, CString* filep);

/** subwin_spec **/
mediator subwin_media for specification
WindowTPtr subwin_spec( CallContext context, WindowTPtr* orig, IntT nlines,
                       IntT ncols, IntT begin_y, IntT begin_x);

#endif

