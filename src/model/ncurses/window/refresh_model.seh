/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef NCURSES_WINDOW_REFRESH_MODEL_SEH
#define NCURSES_WINDOW_REFRESH_MODEL_SEH

#include "common/common_model.seh"
#include "ncurses/ncurses/ncurses_data.seh"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** doupdate_spec **/
specification
IntT doupdate_spec( CallContext context);
void doupdate_model(NCursesWindow* local);
void onDoupdate( CallContext context, IntT doupdate_spec);
/** is_linetouched_spec **/
specification
IntT is_linetouched_spec( CallContext context, NCursesWindow* win,  IntT line);

/** is_wintouched_spec **/
specification
IntT is_wintouched_spec( CallContext context, NCursesWindow* win);

/** isendwin_spec **/
specification
IntT isendwin_spec( CallContext context);

/** redrawwin_spec **/
specification
IntT redrawwin_spec( CallContext context, NCursesWindow* win);
void onRedrawwin( CallContext context, NCursesWindow* win,IntT redrawwin_spec);

/** refresh_spec **/
//This specification refers to: refresh, wrefresh
specification
IntT refresh_spec( CallContext context, WindowTPtr* win);
void onRefresh( CallContext context, WindowTPtr* win, IntT refresh_spec);
/** syncok_spec **/
specification
IntT syncok_spec( CallContext context, NCursesWindow* win, IntT bf);

/** touchline_spec **/
specification
IntT touchline_spec( CallContext context, NCursesWindow* win,  IntT start,
                    IntT count);
void touchline_model(NCursesWindow* local, IntT start,IntT count);
void onTouchline( CallContext context, NCursesWindow* win,  IntT start,
                    IntT count, IntT touchline_spec);
/** touchwin_spec **/
specification
IntT touchwin_spec( CallContext context, NCursesWindow* win);
void touchwin_model(NCursesWindow* local);
void onTouchwin( CallContext context, NCursesWindow* win, IntT touchwin_spec);
/** untouchwin_spec **/
specification
IntT untouchwin_spec( CallContext context, NCursesWindow* win);
void untouchwin_model(NCursesWindow* local);
void onUntouchwin( CallContext context, NCursesWindow* win,
                  IntT untouchwin_spec);
/** wcursyncup_spec **/
specification
void wcursyncup_spec( CallContext context, NCursesWindow* win );
void onWcursync(CallContext context, NCursesWindow* win);
/** wnoutrefresh_spec **/
specification
IntT wnoutrefresh_spec( CallContext context, NCursesWindow*  win);
void wnoutrefresh_model(NCursesWindow* local);
void onWnoutrefresh( CallContext context, NCursesWindow* win,
                  IntT wnoutrefresh_spec);

/** wredrawln_spec **/
specification
IntT wredrawln_spec( CallContext context, NCursesWindow* win,  IntT beg_line,
                    IntT num_lines);
void onWredrawln( CallContext context, NCursesWindow* win,  IntT beg_line,
                    IntT num_lines, IntT wredrawln_spec);
/** wrefresh_spec **/
//specification
//ReturnType wrefresh_spec( CallContext context, ... );

/** wsyncdown_spec **/
specification
void wsyncdown_spec( CallContext context, NCursesWindow* win);
void onWsyncdown( CallContext context, NCursesWindow* win);
/** wsyncup_spec **/
specification
void wsyncup_spec( CallContext context, NCursesWindow* win);
void onWsyncup( CallContext context, NCursesWindow* win);
/** wtouchln_spec **/
specification
IntT wtouchln_spec( CallContext context, NCursesWindow* win, IntT y, IntT n,
                   IntT changed);
void wtouchln_model(NCursesWindow* local, IntT y, IntT n, IntT changed);
void onWtouchln( CallContext context, NCursesWindow* win, IntT y, IntT n,
                   IntT changed, IntT wtouchln_spec);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/
IntT line_touched(NCursesWindow* wnd, IntT line);
IntT win_touched(NCursesWindow* wnd);







#endif

