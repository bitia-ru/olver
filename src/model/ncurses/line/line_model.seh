/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef NCURSES_LINE_MODEL_SEH
#define NCURSES_LINE_MODEL_SEH

#include "common/common_model.seh"
#include "ncurses/ncurses/ncurses_data.seh"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** hline_spec **/
//This specification refers to: hline, mvhline, mvwhline, whline
specification
IntT hline_spec( CallContext context, WindowTPtr* win, NCursesPosition* position, ChTypeT ch, IntT n );

void onHline(CallContext context, WindowTPtr* win, NCursesPosition* position, ChTypeT ch, IntT n, IntT hline_spec);

/** vline_spec **/
//This specification refers to: mvwvline, wvline, mvvline, vline
specification
IntT vline_spec( CallContext context, WindowTPtr* win, NCursesPosition* position, ChTypeT ch, IntT n );

void onVline(CallContext context, WindowTPtr* win, NCursesPosition* position, ChTypeT ch, IntT n, IntT vline_spec);

/** insertln_spec **/
//This specification refers to: insertln, winsertln
specification
IntT insertln_spec( CallContext context, WindowTPtr* win);

void onInsertln(CallContext context, WindowTPtr* win, IntT insertln_spec);

/** insdelln_spec **/
//This specification refers to: insdelln, winsdelln
specification
IntT insdelln_spec( CallContext context, WindowTPtr* win, IntT n);

void onInsdelln(CallContext context, WindowTPtr* win, IntT n, IntT insdelln_spec);

/** ripoffline_spec **/
specification
IntT ripoffline_spec( CallContext context, IntT line, RipCallbackFunc init);

void onRipoffline(CallContext context, IntT line, RipCallbackFunc init, IntT ripoffline_spec );

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

NCursesWindow * getUsedWindow(CallContext context, WindowTPtr * win);
NCursesPosition * getUsedPos(CallContext context, NCursesPosition* position, NCursesWindow * curWnd);

#endif

