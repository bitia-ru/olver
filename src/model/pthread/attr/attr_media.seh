/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PTHREAD_ATTR_MEDIA_SEH
#define PTHREAD_ATTR_MEDIA_SEH

#include "pthread/attr/attr_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initPthreadAttrSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** pthread_attr_destroy_spec **/
mediator pthread_attr_destroy_media for specification
IntT pthread_attr_destroy_spec( CallContext context, PThreadAttrTPtr attr);

/** pthread_attr_getdetachstate_spec **/
mediator pthread_attr_getdetachstate_media for specification
GetStateFunctionResult* pthread_attr_getdetachstate_spec(
                                       CallContext context, PThreadAttrTPtr attr);

/** pthread_attr_getguardsize_spec **/
mediator pthread_attr_getguardsize_media for specification
GetStateFunctionResult* pthread_attr_getguardsize_spec(
                                      CallContext context, PThreadAttrTPtr attr);

/** pthread_attr_getinheritsched_spec **/
mediator pthread_attr_getinheritsched_media for specification
GetStateFunctionResult* pthread_attr_getinheritsched_spec( CallContext context,
                                                          PThreadAttrTPtr attr);

/** pthread_attr_getschedparam_spec **/
mediator pthread_attr_getschedparam_media for specification
GetStateFunctionResult* pthread_attr_getschedparam_spec( CallContext context, 
                                                        PThreadAttrTPtr attr);

/** pthread_attr_getschedpolicy_spec **/
mediator pthread_attr_getschedpolicy_media for specification
GetStateFunctionResult* pthread_attr_getschedpolicy_spec( CallContext context,
                                                         PThreadAttrTPtr attr);
                                                         
/** pthread_attr_getscope_spec **/
mediator pthread_attr_getscope_media for specification
GetStateFunctionResult* pthread_attr_getscope_spec( CallContext context, 
                                                   PThreadAttrTPtr attr );

/** pthread_attr_getstack_spec **/
mediator pthread_attr_getstack_media for specification
GetStateFunctionResult* pthread_attr_getstack_spec( CallContext context,
                                                   PThreadAttrTPtr attr);

/** pthread_attr_getstackaddr_spec **/
mediator pthread_attr_getstackaddr_media for specification
GetStateFunctionResult* pthread_attr_getstackaddr_spec( CallContext context,
                                                       PThreadAttrTPtr attr);

/** pthread_attr_getstacksize_spec **/
mediator pthread_attr_getstacksize_media for specification
GetStateFunctionResult* pthread_attr_getstacksize_spec( CallContext context, 
                                                       PThreadAttrTPtr attr);

/** pthread_attr_init_spec **/
mediator pthread_attr_init_media for specification
IntT pthread_attr_init_spec( CallContext context, VoidTPtr attr);

/** pthread_attr_setdetachstate_spec **/
mediator pthread_attr_setdetachstate_media for specification
IntT pthread_attr_setdetachstate_spec( CallContext context, PThreadAttrTPtr attr, 
                                       IntT detachstate);

/** pthread_attr_setguardsize_spec **/
mediator pthread_attr_setguardsize_media for specification
IntT pthread_attr_setguardsize_spec( CallContext context, PThreadAttrTPtr attr, 
                                    SizeT guardsize);

/** pthread_attr_setinheritsched_spec **/
mediator pthread_attr_setinheritsched_media for specification
IntT pthread_attr_setinheritsched_spec( CallContext context, PThreadAttrTPtr attr, 
                                       IntT  inheritsched);

/** pthread_attr_setschedparam_spec **/
mediator pthread_attr_setschedparam_media for specification
IntT pthread_attr_setschedparam_spec( CallContext context, PThreadAttrTPtr attr, 
                                     ShedParam* param);

/** pthread_attr_setschedpolicy_spec **/
mediator pthread_attr_setschedpolicy_media for specification
IntT pthread_attr_setschedpolicy_spec( CallContext context, 
                                           PThreadAttrTPtr attr,
                                           IntT  policy);

/** pthread_attr_setscope_spec **/
mediator pthread_attr_setscope_media for specification
IntT pthread_attr_setscope_spec( CallContext context, PThreadAttrTPtr attr, 
                                IntT contentionscope);

/** pthread_attr_setstack_spec **/
mediator pthread_attr_setstack_media for specification
IntT pthread_attr_setstack_spec(CallContext context, PThreadAttrTPtr attr, 
                                VoidTPtr stackaddr, SizeT stacksize);

/** pthread_attr_setstackaddr_spec **/
mediator pthread_attr_setstackaddr_media for specification
IntT pthread_attr_setstackaddr_spec(CallContext context, PThreadAttrTPtr attr, 
                                    VoidTPtr stackaddr);

/** pthread_attr_setstacksize_spec **/
mediator pthread_attr_setstacksize_media for specification
IntT pthread_attr_setstacksize_spec(CallContext context, PThreadAttrTPtr attr,
                                    SizeT stacksize);


#endif

