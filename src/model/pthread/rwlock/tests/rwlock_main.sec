/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "pthread/rwlock/tests/rwlock_main.seh"

bool main_pthread_rwlock_rwlock(int argc, char** argv)
{
//    pthread_rwlock_rwlock_init_destroy_scenario(argc, argv);
//    pthread_rwlock_rwlock_single_rwlock_scenario(argc, argv);
//    pthread_rwlock_rwlock_repeated_lock_scenario(argc, argv);
    pthread_rwlock_rwlock_N_rwlock_scenario(argc, argv);
//    pthread_rwlock_rwlock_N_rwlock_light_scenario(argc, argv);
//    pthread_rwlock_rwlock_deadlock_scenario(argc, argv);
//    pthread_rwlock_rwlock_errors_scenario(argc, argv);
    return true;
}


#ifdef PTHREAD_RWLOCK_RWLOCK_LOCAL_MAIN

#include "common/init.seh"

#include "common/common_media.seh"
#include "common/common_scenario.seh"
#include "common/control_center.seh"
#include "config/system_config.seh"
#include "system/system/system_model.seh"
#include "process/process/process_model.seh"
#include "pthread/pthread/pthread_media.seh"
#include "pthread/mutex/mutexattr_media.seh"
#include "pthread/mutex/mutex_media.seh"
#include "pthread/rwlock/rwlock_media.seh"
#include "pthread/rwlock/rwlockattr_media.seh"


/********************************************************************/
/**                     Test System Initialization                 **/
/********************************************************************/
void reinitTestSystem(void)
{
    reinitControlCenter();
    initCommonModel();
    initCommonMedia();
    initCommonScenarioState();

    initSystemConfiguration();
    initSystemModel();
    initProcessModel();
    initPThreadModel();

    initPthreadRwlockSubsystem();
    initPthreadRwlockRwlockattrSubsystem();
}

int main(int argc, char** argv)
{
    initTestSystem();
    loadSUT();

    addTraceToFile("trace.xml");

    // Set up tracer
    //setTraceEncoding("windows-1251");

    // Run test scenario
    main_pthread_rwlock_rwlock(argc, argv);

    //  unloadSUT();
    return 0;
}

#endif
