/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PTHREAD_COND_CONDATTR_MODEL_SEH
#define PTHREAD_COND_CONDATTR_MODEL_SEH

#include "common/common_model.seh"
#include "pthread/pthread/pthread_model.seh"


typedef VoidTPtr PThreadCondAttrTPtr;

specification typedef struct PThreadCondAttrT
{
  PThreadCondAttrTPtr address;
  PThreadPShared pshared;
} PThreadCondAttrT;


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** pthread_condattr_init_spec **/
specification
ErrorCode* pthread_condattr_init_spec(CallContext context, VoidTPtr attr);

void onPThreadCondAttrInit(CallContext context, PThreadCondAttrTPtr attr, ErrorCode* res);

//** pthread_condattr_destroy_spec **/
specification
ErrorCode* pthread_condattr_destroy_spec(CallContext context, PThreadCondAttrTPtr attr);

void onPThreadCondAttrDestroy(CallContext context, PThreadCondAttrTPtr attr, ErrorCode* res);

/** pthread_condattr_getpshared_spec **/
specification
ErrorCode* pthread_condattr_getpshared_spec(CallContext context, PThreadCondAttrTPtr attr, IntT* pshared);

/** pthread_condattr_setpshared_spec **/
specification
ErrorCode* pthread_condattr_setpshared_spec(CallContext context, PThreadCondAttrTPtr attr, IntT pshared);    

void onPThreadCondAttrSetPshared(CallContext context, PThreadCondAttrTPtr attr, IntT pshared, ErrorCode* res);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

PThreadCondAttrT* create_PThreadCondAttrT(PThreadCondAttrTPtr address, PThreadPShared pshared);
PThreadCondAttrT* getCondAttributes(PThreadCondAttrTPtr address);

#endif

