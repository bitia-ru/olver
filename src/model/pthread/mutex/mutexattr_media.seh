/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PTHREAD_MUTEX_MUTEXATTR_MEDIA_SEH
#define PTHREAD_MUTEX_MUTEXATTR_MEDIA_SEH


#include "pthread/mutex/mutexattr_model.seh"


/********************************************************************/
/**              Mutex Attributes Model Initialization             **/
/********************************************************************/
void initPThreadMutexMutexattrSubsystem(void);


/********************************************************************/
/**                Mutex Attributes Interface Functions            **/
/********************************************************************/

/** pthread_mutexattr_init_spec **/
mediator pthread_mutexattr_init_media for specification
ErrorCode* pthread_mutexattr_init_spec( CallContext context, VoidTPtr attr );


/** pthread_mutexattr_gettype_spec **/
mediator pthread_mutexattr_gettype_media for specification
ErrorCode* pthread_mutexattr_gettype_spec( CallContext context, PThreadMutexAttrTPtr attr, IntT* type );


/** pthread_mutexattr_settype_spec **/
mediator pthread_mutexattr_settype_media for specification
ErrorCode* pthread_mutexattr_settype_spec( CallContext context, PThreadMutexAttrTPtr attr, IntT type );


/** pthread_mutexattr_getpshared_spec **/
mediator pthread_mutexattr_getpshared_media for specification
ErrorCode* pthread_mutexattr_getpshared_spec( CallContext context, PThreadMutexAttrTPtr attr, IntT* pshared );


/** pthread_mutexattr_setpshared_spec **/
mediator pthread_mutexattr_setpshared_media for specification
ErrorCode* pthread_mutexattr_setpshared_spec( CallContext context, PThreadMutexAttrTPtr attr, IntT pshared );


/** pthread_mutexattr_destroy_spec **/
mediator pthread_mutexattr_destroy_media for specification
ErrorCode* pthread_mutexattr_destroy_spec( CallContext context, PThreadMutexAttrTPtr attr );


#endif
