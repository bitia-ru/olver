/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "pthread/pthread/tests/pthread_scenario.seh"


/********************************************************************/
/**                     Model State Operations                     **/
/********************************************************************/
Map* savePThreadModelState(void)
{
    return clone(systems);
}

void dumpThreadsJoinBlocked()
{
    SystemState *sysState;
    ProcessState *process;
    ThreadState *thState;

    int s, p, t;
    int si, pi, ti;
    s = size_Map(systems);
    for(si=0;si<s;si++)
    {
        sysState = get_Map(systems, key_Map(systems, si));

        p = size_Map(sysState->processes);
        for(pi=0;pi<p;pi++)
        {
            process = get_Map(sysState->processes, key_Map(sysState->processes, pi));

            t = size_Map(process->threads);

            for(ti=0;ti<t;ti++)
            {
                thState = get_Map(process->threads, key_Map(process->threads, ti));
                verbose("thread: %u\t join_called:%d blocked:%d detached:%d\n", (int)thState->id.thread, (int)thState->join_called, (int)thState->is_blocked, (int)thState->detach_called);
            }
        }
    }

    verbose("\n\n", (int)thState->id.thread, (int)thState->join_called, (int)thState->is_blocked);

}

void restorePThreadModelState(Map* saved_state)
{
    //verbose("BEFORE RESTORE\n");

    //dumpThreadsJoinBlocked();

    systems = saved_state;
    //verbose("AFTER RESTORE\n");

    //dumpThreadsJoinBlocked();

    //verbose("FINISH RESTORE\n");
}

