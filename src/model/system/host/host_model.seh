/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SYSTEM_HOST_MODEL_SEH
#define SYSTEM_HOST_MODEL_SEH

#include "common/common_model.seh"

/********************************************************************/
/**                          Model Data                            **/
/********************************************************************/

/* [struct utsname is described in LSB 13.4.55 (sys/utsname.h)] */

invariant specification typedef struct UtsnameT
{
    //VoidTPtr data;
    CString * sysname;
    CString * nodename;
    CString * release;
    CString * version;
    CString * machine;
    CString * domainname;
}UtsnameT;

UtsnameT * create_UtsnameT(
    CString * sysname,
    CString * nodename,
    CString * release,
    CString * version,
    CString * machine,
    CString * domainname
);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** gethostid_spec **/
specification
LongT gethostid_spec( CallContext context );

/** gethostname_spec **/
specification
IntT gethostname_spec( CallContext context, StringTPtr name, SizeT namelen );

/** sethostname_spec **/
specification
IntT sethostname_spec( CallContext context, StringTPtr name, SizeT len, ErrorCode * errno);

/** uname_spec **/
specification
IntT uname_spec( CallContext context, UtsnameT * name, ErrorCode * errno);


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

/* */
LongT read_HOSTNAMEMAX();
CString * gethostname_state();

bool isEnoughPrivileges();

#endif

