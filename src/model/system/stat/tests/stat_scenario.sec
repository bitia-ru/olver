/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "system/stat/tests/stat_scenario.seh"
#include "common/common_scenario.seh"
#include "common/common_media.seh"
#include "system/system/system_model.seh"
#include "process/process/process_model.seh"
#include "system/stat/stat_model.seh"

/********************************************************************/
/**                  Test Static Data                              **/
/********************************************************************/

static CallContext context;

/********************************************************************/
/**                  Test Scenario Initialization                  **/
/********************************************************************/

static bool init_system_stat_scenario(int argc,char** argv)
{
    context = getContext();
    return true;
}

static void finish_system_stat_scenario(void)
{
}

/********************************************************************/
/**                  Test Actions                                  **/
/********************************************************************/

scenario
bool system_stat_scen()
{
    acct_spec      ( context, NULL, requestErrorCode() );
    clock_spec     ( context                           );
    getloadavg_spec( context, 3                        );
    times_spec     ( context,       requestErrorCode() );
    return true;
}

/********************************************************************/
/**                    Test Scenario Definition                    **/
/********************************************************************/

scenario dfsm system_stat_scenario =
{
    .init    = init_system_stat_scenario  ,
    .finish  = finish_system_stat_scenario,
    .actions = { system_stat_scen,
                 NULL
               }
};

#ifdef STAT_LOCAL_MAIN

#include "common/init.seh"
#include "common/common_media.seh"
#include "common/common_scenario.seh"
#include "common/control_center.seh"
#include "config/system_config.seh"
#include "system/system/system_model.seh"
#include "process/process/process_model.seh"
#include "pthread/pthread/pthread_media.seh"
#include "process/process/process_media.seh"
#include "system/sysconf/sysconf_media.seh"

/********************************************************************/
/**                     Test System Initialization                 **/
/********************************************************************/

void reinitTestSystem(void)
{
    reinitControlCenter();
    initCommonModel();
    initCommonMedia();
    initCommonScenarioState();

    initSystemConfiguration();
    initPathSystemConfiguration();
    initSystemModel();
    initProcessModel();
    initPThreadModel();

    initSystemSysconfSubsystem();

    initSystemStatSubsystem();

    initMath();
}

int main(int argc, char** argv)
{
    //
    initTestSystem();
    loadSUT();

    // Set up tracer
    //setTraceEncoding("windows-1251");

    addTraceToFile("trace.xml");

    trace_all_requirements = true;
    // Run test scenario
    system_stat_scenario(argc, argv);

    //  unloadSUT();
    return 0;
}
#endif
