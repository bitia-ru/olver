/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SYSTEM_USER_GROUP_MEDIA_SEH
#define SYSTEM_USER_GROUP_MEDIA_SEH

#include "system/user/group_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initSystemUserGroupSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** endgrent_spec **/
mediator endgrent_media for specification
void endgrent_spec( CallContext context, ErrorCode* errno, CancelStatus status);

/** getgrent_spec **/
mediator getgrent_media for specification
UsersGroup* getgrent_spec(CallContext context, ErrorCode* errno, 
                          CancelStatus status);

/** getgrgid_spec **/
mediator getgrgid_media for specification
UsersGroup* getgrgid_spec(CallContext context, GidT gid, ErrorCode* errno, 
                          CancelStatus status);

/** getgrgid_r_spec **/
mediator getgrgid_r_media for specification
GetGrxxxFunctionResult*  getgrgid_r_spec(CallContext context, 
                                         GidT gid,  
                                         UsersGroupTPtr grp, SizeT bufsize, 
                                         UsersGroupTPtr* result, 
                                         ErrorCode* errno, 
                                         CancelStatus status);

/** getgrnam_spec **/
mediator getgrnam_media for specification
UsersGroup* getgrnam_spec(CallContext context, CString* dest, 
                          ErrorCode* errno, CancelStatus status);

/** getgrnam_r_spec **/
mediator getgrnam_r_media for specification
GetGrxxxFunctionResult*  getgrnam_r_spec(CallContext context, 
                                         CString* name,  
                                         UsersGroupTPtr grp, SizeT bufsize, 
                                         UsersGroupTPtr* result, 
                                         ErrorCode* errno, 
                                         CancelStatus status);

/** getgrouplist_spec **/
mediator getgrouplist_media for specification
IntT getgrouplist_spec(CallContext context, CString* user, GidT group, 
                       Set* groups, IntT* ngroups);

/** setgrent_spec **/
mediator setgrent_media for specification
void setgrent_spec(CallContext context, ErrorCode* errno, 
                   CancelStatus status);




#endif

