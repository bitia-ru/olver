/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SYSTEM_USER_GROUP_MODEL_SEH
#define SYSTEM_USER_GROUP_MODEL_SEH

#include "common/common_model.seh"
#include "system/system/system_model.seh"
#include "data/errno_model.seh"

typedef VoidTPtr UsersGroupTPtr;

specification typedef struct GetGrxxxFunctionResult
{
    IntT        errno;
    UsersGroup* grp;
} GetGrxxxFunctionResult;

GetGrxxxFunctionResult * create_GetGrxxxFunctionResult(
    IntT        errno,
    UsersGroup* grp
);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** endgrent_spec **/
specification
void endgrent_spec( CallContext context, ErrorCode* errno, CancelStatus status);

/** getgrent_spec **/
specification
UsersGroup* getgrent_spec(CallContext context, ErrorCode* errno,
                          CancelStatus status);

/** getgrgid_spec **/
specification
UsersGroup* getgrgid_spec(CallContext context, GidT gid, ErrorCode* errno, 
                          CancelStatus status);
UsersGroup* getgrgid_model(Set* groupsSet, GidT dest);

/** getgrgid_r_spec **/
specification
GetGrxxxFunctionResult*  getgrgid_r_spec(CallContext context, 
                                         GidT gid,  
                                         UsersGroupTPtr grp, SizeT bufsize, 
                                         UsersGroupTPtr* result, 
                                         ErrorCode* errno, 
                                         CancelStatus status);

/** getgrnam_spec **/
specification
UsersGroup* getgrnam_spec(CallContext context, CString* dest, 
                          ErrorCode* errno, CancelStatus status);
UsersGroup* getgrnam_model(Set* groupsSet, CString*  destStr);

/** getgrnam_r_spec **/
specification
GetGrxxxFunctionResult* getgrnam_r_spec(CallContext context, 
                                         CString* name,  
                                         UsersGroupTPtr grp, SizeT bufsize, 
                                         UsersGroupTPtr* result, 
                                         ErrorCode* errno, 
                                         CancelStatus status);

/** getgrouplist_spec **/
specification
IntT getgrouplist_spec(CallContext context, CString* user, GidT group, 
                       Set* groups, IntT* ngroups);

/** setgrent_spec **/
specification
void setgrent_spec(CallContext context, ErrorCode* errno, 
                   CancelStatus status);




/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

bool isValidGroupsSet(Set* groupsSet);
bool isRequiredGroupsExist(Set* set);
bool CheckOptionalUsers(Set* groupsSet);
bool isUserExists(Set* groupsSet, CString* user);
IntT getNumUserGroups(Set* groupsSet, CString* user, GidT group, Set* userGids);
bool isEqualSets(Set* userGids, Set* groups, bool fullCompare);
bool isEqualUserGroupsStructures(CallContext context, UsersGroup* grpp1, 
                                 UsersGroup* grpp2);

#endif

