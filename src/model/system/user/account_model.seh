/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SYSTEM_USER_ACCOUNT_MODEL_SEH
#define SYSTEM_USER_ACCOUNT_MODEL_SEH

#include "common/common_model.seh"
#include "data/sys/types_model.seh"
#include "data/sys/time_model.seh"

/*[Constants]*/
#define SUT_EMPTY 0
#define SUT_RUN_LVL 1
#define SUT_BOOT_TIME 2
#define SUT_NEW_TIME 3
#define SUT_OLD_TIME 4
#define SUT_INIT_PROCESS 5
#define SUT_LOGIN_PROCESS 6
#define SUT_USER_PROCESS 7
#define SUT_DEAD_PROCESS 8
#define SUT_ACCOUNTING 9

specification typedef struct UtmpT
{
    VoidTPtr address;

    CString * ut_user;
    CString * ut_host;
    CString * ut_id; 
    CString * ut_line; 
    PidT ut_pid; 
    ShortT ut_type; 
    TimeVal * ut_tv; 
}UtmpT;

UtmpT * create_UtmpT( VoidTPtr address, CString * ut_user, CString * ut_host, CString * ut_id, CString * ut_line, 
                        PidT ut_pid, ShortT ut_type, TimeVal * ut_tv
                      );

specification typedef struct UtmpxT
{
    VoidTPtr address;
    
    CString * ut_user; //User login name. 
    CString * ut_id; // Unspecified initialization process identifier. 
    CString * ut_line; // Device name. 
    PidT ut_pid; // Process ID. 
    ShortT ut_type; // Type of entry. 
    TimeVal * ut_tv; // Time entry was made. 
}UtmpxT;

UtmpxT * create_UtmpxT( VoidTPtr address, CString * ut_user, CString * ut_id, CString * ut_line, 
                        PidT ut_pid, ShortT ut_type, TimeVal * ut_tv
                      );

typedef VoidTPtr UtmpxTPtr;
typedef VoidTPtr UtmpTPtr;

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** endutent_spec **/
specification
void endutent_spec(CallContext context);

/** endutxent_spec **/
specification
void endutxent_spec( CallContext context );

/** getutxent_spec **/
specification
UtmpxT * getutxent_spec( CallContext context );

/** getutxid_spec **/
specification
UtmpxT * getutxid_spec( CallContext context, UtmpxTPtr id);

/** getutxline_spec **/
specification
UtmpxT * getutxline_spec( CallContext context, UtmpxTPtr line);

/** pututxline_spec **/
specification
UtmpxT * pututxline_spec( CallContext context, UtmpxTPtr utmpx, ErrorCode * errno);

/** setutxent_spec **/
specification
void setutxent_spec( CallContext context );

/** getutent_spec **/
specification
UtmpT * getutent_spec( CallContext context );

/** getutent_r_spec **/
specification
IntT getutent_r_spec( CallContext context, UtmpTPtr buffer, VoidTPtr result );

/** login_spec **/
specification
void login_spec( CallContext context, UtmpTPtr ut );

/** logout_spec **/
specification
IntT logout_spec( CallContext context, CString * line );

/** logwtmp_spec **/
specification
void logwtmp_spec( CallContext context, CString * line, CString * name, CString * host );

/** setutent_spec **/
specification
void setutent_spec( CallContext context );

/** utmpname_spec **/
specification
IntT utmpname_spec( CallContext context, CString * dbname );


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

