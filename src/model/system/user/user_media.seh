/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SYSTEM_USER_MEDIA_SEH
#define SYSTEM_USER_MEDIA_SEH

#include "system/user/user_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initSystemUserSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** endpwent_spec **/
mediator endpwent_media for specification
void endpwent_spec( CallContext context, ErrorCode* errno, CancelStatus status );

/** getpwent_spec **/
mediator getpwent_media for specification
Passwd* getpwent_spec(CallContext context, ErrorCode* errno, CancelStatus status );

/** getpwnam_spec **/
mediator getpwnam_media for specification
Passwd* getpwnam_spec( CallContext context, CString* dest, ErrorCode* errno, CancelStatus status );

/** getpwnam_r_spec **/
mediator getpwnam_r_media for specification
GetPwxxxFunctionResult* getpwnam_r_spec(CallContext context, CString* name,  PasswdTPtr pwd, SizeT bufsize, 
                                        PasswdTPtr* result, ErrorCode* errno, CancelStatus status );

/** getpwuid_spec **/
mediator getpwuid_media for specification
Passwd* getpwuid_spec( CallContext context, UidT uid, ErrorCode* errno, CancelStatus status );

/** getpwuid_r_spec **/
mediator getpwuid_r_media for specification
GetPwxxxFunctionResult*  getpwuid_r_spec(CallContext context, UidT uid,  PasswdTPtr pwd, 
                                         SizeT bufsize, PasswdTPtr* result, ErrorCode* errno, CancelStatus status );

/** setpwent_spec **/
mediator setpwent_media for specification
void setpwent_spec( CallContext context, ErrorCode* errno);


#endif

