/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "signal/sigset/tests/sigset_scenario.seh"
#include "common/common_media.seh"

#include <stdio.h>

/********************************************************************/
/**                   Test Scenario Helper Functions               **/
/********************************************************************/

/* 
 * PrintfSigSet function used for debug purpose
 */
/*
void PrintfSigSet(SigSet* s)
{
    int j;
    SignalObj* sig;
    verbose("\n{");
    for (j = 1; j <=SIGRTMAX; j++)
    {
        sig = create_SignalObj(j);
        if (contains_Set(s->data, sig))
        {
            verbose("%d ", j);
        };
    }
    verbose("}");
}*/


/*void getSigRTConsts(CallContext context, int* Sigrtmin, int* Sigrtmax)
{
    TSCommand command = create_TSCommand();
    bool verdict;
    
    format_TSCommand( &command, "get_SIGRT_const");
    verdict = executeCommandInContext( context, &command );
    if (verdict)
    {
        timestamp = command.meta.timestamp;
        *Sigrtmin = readInt_TSStream(&command.response);
        *Sigrtmax = readInt_TSStream(&command.response);
    }
        
    destroy_TSCommand(&command);
    return;
}*/

void init_SigRTConsts(CallContext context, int* Sigrtmin, int* Sigrtmax)
{
    *Sigrtmax = __libc_current_sigrtmax_spec(context);
    *Sigrtmin = __libc_current_sigrtmin_spec(context);
    return;
}



