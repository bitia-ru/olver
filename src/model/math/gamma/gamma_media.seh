/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef MATH_GAMMA_MEDIA_SEH
#define MATH_GAMMA_MEDIA_SEH

#include "math/gamma/gamma_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initMathGammaSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/
/** gamma_spec **/
//This mediator refers to: gammaf, gamma, gammal
mediator gamma_media for specification
Unifloat* gamma_spec(CallContext context, Unifloat* x, 
                      IntT* signgam,  ErrorCode* errno);

/** lgamma_spec **/
//This mediator refers to: lgammaf, lgamma, lgammal
mediator lgamma_media for specification
Unifloat* lgamma_spec(CallContext context, Unifloat* x, 
                      IntT* signgam,  ErrorCode* errno);

/** lgamma_r_spec **/
//This mediator refers to: lgammaf_r, lgamma_r, lgammal_r
mediator lgamma_r_media for 
specification
Unifloat* lgamma_r_spec(CallContext context, Unifloat* x, 
                      IntT* signp,  ErrorCode* errno);

/** tgamma_spec **/
//This mediator refers to: tgammaf, tgamma, tgammal
mediator tgamma_media for specification
Unifloat* tgamma_spec(CallContext context, Unifloat* x, ErrorCode* errno);



#endif

