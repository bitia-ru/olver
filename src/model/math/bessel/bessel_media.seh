/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef MATH_BESSEL_MEDIA_SEH
#define MATH_BESSEL_MEDIA_SEH

#include "math/bessel/bessel_model.seh"
#include "math/math/math_config.h"

/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initMathBesselSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** j0_spec **/
//This mediator refers to: j0f, j0, j0l
mediator j0_media for specification
Unifloat* j0_spec( CallContext context, Unifloat* x, ErrorCode *errno);

/** j1_spec **/
//This mediator refers to: j1f, j1, j1l
mediator j1_media for specification
Unifloat* j1_spec( CallContext context, Unifloat* x, ErrorCode *errno);

/** jn_spec **/
//This mediator refers to: jnf, jn, jnl
mediator jn_media for specification
Unifloat* jn_spec( CallContext context, IntT n, Unifloat* x, 
                   IntT round, IntT* ulp, ErrorCode *errno);

/** y0_spec **/
//This mediator refers to: y0f, y0, y0l
mediator y0_media for specification
Unifloat* y0_spec( CallContext context, Unifloat* x, ErrorCode *errno);

/** y1_spec **/
//This mediator refers to: y1f, y1, y1l
mediator y1_media for specification
Unifloat* y1_spec( CallContext context, Unifloat* x, ErrorCode *errno);

/** yn_spec **/
//This mediator refers to: ynf, yn, ynl
mediator yn_media for specification
Unifloat* yn_spec( CallContext context, IntT n, Unifloat* x, 
                   IntT round, IntT* ulp, ErrorCode *errno);



#endif
