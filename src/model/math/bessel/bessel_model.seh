/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef MATH_BESSEL_MODEL_SEH
#define MATH_BESSEL_MODEL_SEH

#include "common/common_model.seh"
#include "math/math/math_data.seh"
#include "math/bessel/bessel_config.h"
#include "math/math/math_config.h"

//#define RESEARCH 0

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** j0_spec **/
//This specification refers to: j0f, j0, j0l
specification
Unifloat* j0_spec( CallContext context, Unifloat* x, ErrorCode *errno);

/** j1_spec **/
//This specification refers to: j1f, j1, j1l
specification
Unifloat* j1_spec( CallContext context, Unifloat* x, ErrorCode *errno);

/** jn_spec **/
//This specification refers to: jnf, jn, jnl
specification
Unifloat* jn_spec( CallContext context, IntT n, Unifloat* x, 
                   IntT round, IntT* ulp, ErrorCode *errno);

/** y0_spec **/
//This specification refers to: y0f, y0, y0l
specification
Unifloat* y0_spec( CallContext context, Unifloat* x, ErrorCode *errno );

/** y1_spec **/
//This specification refers to: y1f, y1, y1l
specification
Unifloat* y1_spec( CallContext context, Unifloat* x, ErrorCode *errno );

/** yn_spec **/
//This specification refers to: ynf, yn, ynl
specification
Unifloat* yn_spec( CallContext context, IntT n, Unifloat* x, 
                   IntT round, IntT* ulp, ErrorCode *errno);

/********************************************************************/
/*                    UNIFLOAT BESSEL FUNCTIONS                     */
/********************************************************************/
Unifloat* j0_model(Unifloat* x);
Unifloat* j1_model(Unifloat* x);
Unifloat* jn_model(IntT n, Unifloat* x);

Unifloat* y0_model(Unifloat* x);
Unifloat* y1_model(Unifloat* x);
Unifloat* yn_model(IntT n, Unifloat* x);

Unifloat* jnRecurrent_Unifloat(IntT n, Unifloat* x);
Unifloat* ynRecurrent_Unifloat(IntT n, Unifloat* x);

Unifloat* jnSteed_Unifloat(IntT n, Unifloat* x);
Unifloat* ynSteed_Unifloat(IntT n, Unifloat* x);

Unifloat* jnPowerSeries_Unifloat(IntT n, Unifloat* x);
Unifloat* ynPowerSeries_Unifloat(IntT n, Unifloat* x);

Unifloat* jnHankel_Unifloat(IntT n, Unifloat* x);
Unifloat* ynHankel_Unifloat(IntT n, Unifloat* x);

Unifloat* jnMeisselFirst_Unifloat(IntT n, Unifloat* x);
Unifloat* ynMeisselFirst_Unifloat(IntT n, Unifloat* x);

Unifloat* jnMeisselSecond_Unifloat(IntT n, Unifloat* x);
Unifloat* ynMeisselSecond_Unifloat(IntT n, Unifloat* x);

Unifloat* factorialSeries_Unifloat(IntT n, UnifloatType type);
Unifloat* power_Unifloat(IntT n, Unifloat* x);
IntT getMethod_Unifloat(IntT n, Unifloat* x);

/********************************************************************/
/**                      Reference Functions                       **/
/********************************************************************/


#endif

