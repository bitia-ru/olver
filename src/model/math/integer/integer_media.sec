/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "math/integer/integer_media.seh"
#include "common/common_media.seh"
#include <string.h>


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initMathIntegerSubsystem(void)
{
    /* Set up mediators */
    set_mediator_abs_spec(abs_media);
    set_mediator_div_spec(div_media);
    set_mediator_imaxabs_spec(imaxabs_media);
    set_mediator_imaxdiv_spec(imaxdiv_media);
    set_mediator_labs_spec(labs_media);
    set_mediator_ldiv_spec(ldiv_media);
    set_mediator_llabs_spec(llabs_media);
    set_mediator_lldiv_spec(lldiv_media);
}

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** abs_spec **/

mediator abs_media for specification
IntT abs_spec( CallContext context, IntT i )
{
    call
    {
        TSCommand command = create_TSCommand();
        IntT res = 0;
    
        format_TSCommand( &command, "abs:$(int)", create_IntTObj(i) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readInt_TSStream(&command.response);
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}

/** div_spec **/
mediator div_media for specification
DivT * div_spec( CallContext context, IntT numer, IntT denom )
{
    call
    {
        TSCommand command = create_TSCommand();
        DivT * res = NULL;
        IntT resQuot, resRem;
    
        format_TSCommand( &command, "div:$(int)$(int)", create_IntTObj(numer), create_IntTObj(denom) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            resQuot = readInt_TSStream(&command.response);
            resRem = readInt_TSStream(&command.response);
            res = create_DivTObj( resQuot, resRem );
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}


/** imaxabs_spec **/
mediator imaxabs_media for specification
IntMaxT imaxabs_spec( CallContext context, IntMaxT i )
{
    call
    {
        TSCommand command = create_TSCommand();
        IntMaxT res = 0;
        IntMaxTObj * tmp = create_IntMaxTObj(i);

        format_TSCommand( &command, "imaxabs:$(intmax)", tmp );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readIntMaxT_TSStream(&command.response);
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}

/** imaxdiv_spec **/
mediator imaxdiv_media for specification
IMaxDivT * imaxdiv_spec( CallContext context, IntMaxT numer, IntMaxT denom )
{
    call
    {
        TSCommand command = create_TSCommand();
        IMaxDivT * res = NULL;
        IntMaxT resQuot, resRem;
    
        format_TSCommand( &command, "imaxdiv:$(intmax)$(intmax)", create_IntMaxTObj(numer), create_IntMaxTObj(denom) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            resQuot = readIntMaxT_TSStream(&command.response);
            resRem = readIntMaxT_TSStream(&command.response);
            res = create_IMaxDivTObj( resQuot, resRem );
        }
        
        destroy_TSCommand(&command);
        
        return res;
    }
}


/** labs_spec **/
mediator labs_media for specification
LongT labs_spec( CallContext context, LongT i )
{
    call
    {
        TSCommand command = create_TSCommand();
        LongT res = 0;
    
        format_TSCommand( &command, "labs:$(long)", create_LongTObj(i) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readLong_TSStream(&command.response);
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}

/** llabs_spec **/
mediator llabs_media for specification
LLongT llabs_spec( CallContext context, LLongT i )
{
    call
    {
        TSCommand command = create_TSCommand();
        LLongT res = 0;
    
        format_TSCommand( &command, "llabs:$(llong)", create_LLongTObj(i) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            res = readLLong_TSStream(&command.response);
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}

/** ldiv_spec **/
mediator ldiv_media for specification
LDivT * ldiv_spec( CallContext context, LongT numer, LongT denom )
{
    call
    {
        TSCommand command = create_TSCommand();
        LDivT * res = NULL;
        LongT resQuot, resRem;
    
        format_TSCommand( &command, "ldiv:$(long)$(long)", create_LongTObj(numer), create_LongTObj(denom) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            resQuot = readLong_TSStream(&command.response);
            resRem = readLong_TSStream(&command.response);
            res = create_LDivTObj( resQuot, resRem );
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}


/** lldiv_spec **/
mediator lldiv_media for specification
LLDivT * lldiv_spec( CallContext context, LLongT numer, LLongT denom )
{
    call
    {
        TSCommand command = create_TSCommand();
        LLDivT * res = NULL;
        LLongT resQuot, resRem;
    
        format_TSCommand( &command, "lldiv:$(llong)$(llong)", create_LLongTObj(numer), create_LLongTObj(denom) );
        executeCommandInContext( context, &command );
        if (!isBadVerdict())
        {
            timestamp = command.meta.timestamp;
            resQuot = readLLong_TSStream(&command.response);
            resRem = readLLong_TSStream(&command.response);
            res = create_LLDivTObj( resQuot, resRem );
        }
        
        destroy_TSCommand(&command);
        
        return res; 
    }
}



