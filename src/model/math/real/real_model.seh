/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef MATH_REAL_MODEL_SEH
#define MATH_REAL_MODEL_SEH

#include "common/common_model.seh"
#include "math/math/math_data.seh"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** ceil_spec **/
//This specification refers to: ceilf, ceil, ceill
specification
Unifloat* ceil_spec(CallContext context, Unifloat* x, ErrorCode* errno);
Unifloat* ceil_model(Unifloat* x);

/** copysign_spec **/
//This specification refers to: copysignf, copysingn, copysignl
specification
Unifloat* copysign_spec(CallContext context, Unifloat* x, Unifloat* y);

/** drem_spec **/
//This specification refers to: dremf, drem, dreml
specification
Unifloat* drem_spec(CallContext context, Unifloat* x, Unifloat* y, 
                     ErrorCode* errno);

/** fabs_spec **/
//This specification refers to: fabsf, fabs, fabsl
specification
Unifloat* fabs_spec(CallContext context, Unifloat* x);

/** fdim_spec **/
//This specification refers to: fdimf, fdim, fdiml
specification
Unifloat* fdim_spec(CallContext context, Unifloat* x, Unifloat* y,
                    ErrorCode* errno);
Unifloat* fdim_model(Unifloat* x, Unifloat* y);

/** floor_spec **/
//This specification refers to: floorf, floor, floorl
specification 
Unifloat* floor_spec(CallContext context, Unifloat* value, ErrorCode* errno);

/** fma_spec **/
//This specification refers to: fmaf, fma, fmal
specification
Unifloat* fma_spec( CallContext context, Unifloat* x, 
                   Unifloat* y, Unifloat* z, ErrorCode* errno);
Unifloat* fma_model(Unifloat* x, Unifloat* y, Unifloat* z);

/** fmax_spec **/
//This specification refers to: fmaxf, fmax, fmaxl
specification
Unifloat* fmax_spec( CallContext context, Unifloat* x, Unifloat* y);
Unifloat* fmax_model(Unifloat* x, Unifloat* y);

/** fmin_spec **/
//This specification refers to: fminf, fmin, fminl
specification
Unifloat* fmin_spec( CallContext context, Unifloat* x, Unifloat* y);
Unifloat* fmin_model(Unifloat* x, Unifloat* y);

/** fmod_spec **/
//This specification refers to: fmodf, fmod, fmodl
specification
Unifloat* fmod_spec( CallContext context, Unifloat* x, 
                      Unifloat* y, ErrorCode *errno);
Unifloat* fmod_model(Unifloat* x, Unifloat* y);

/** llrint_spec **/
//This specification refers to: llrintf, llrint, llrintl
specification
LLongT llrint_spec(CallContext context, Unifloat* x, ErrorCode* errno);
LLongT llrint_model(Unifloat* x, IntT* error);

/** llround_spec **/
//This specification refers to: llroundf, llround, llroundl
specification
LLongT llround_spec(CallContext context, Unifloat* x, ErrorCode* errno);
LLongT llround_model(Unifloat* x, IntT* error);

/** lrint_spec **/
//This specification refers to: lrintf, lrint, lrintl
specification
LongT lrint_spec(CallContext context, Unifloat* x, ErrorCode* errno);
LongT lrint_model(Unifloat* x, IntT* error);

/** lround_spec **/
//This specification refers to: lroundf, lround, lroundl
specification
LongT lround_spec(CallContext context, Unifloat* x, ErrorCode* errno);
LongT lround_model(Unifloat* x, IntT* error);

/** modf_spec **/
//This specification refers to: modff, modf, modfl
specification
Unifloat* modf_spec( CallContext context, Unifloat* x, Unifloat** iptr);
Unifloat* modf_model(Unifloat* x, Unifloat** model_iptr);

/** nan_spec **/
//This specification refers to: nanf, nan, nanl
specification
Unifloat* nan_spec( CallContext context, CString* tagp, IntT type_f);

/** nearbyint_spec **/
//This specification refers to: nearbyintf, nearbyint, nearbyintl
specification
Unifloat* nearbyint_spec(CallContext context, Unifloat* x, ErrorCode* errno);
Unifloat* nearbyint_model(Unifloat* x);

/** remainder_spec **/
//This specification refers to: remainderf, remainder, remainderl
specification
Unifloat* remainder_spec( CallContext context, Unifloat* x, 
                         Unifloat* y, ErrorCode *errno);
Unifloat* remainder_model(Unifloat* x, Unifloat* y);

/** remquo_spec **/
//This specification refers to: remquof, remquo, remquol
specification
Unifloat* remquo_spec( CallContext context, Unifloat* x, 
                       Unifloat* y, Unifloat** quo, ErrorCode *errno);
Unifloat* remquo_model(Unifloat* x, Unifloat* y);

/** rint_spec **/
//This specification refers to: rintf, rint, rintl
specification
Unifloat* rint_spec(CallContext context, Unifloat* x, ErrorCode* errno);

/** round_spec **/
//This specification refers to: roundf, round, roundl
specification
Unifloat* round_spec(CallContext context, Unifloat* x, ErrorCode* errno);
Unifloat* round_model(Unifloat* x);

/** trunc_spec **/
//This specification refers to: truncf, trunc, truncl
specification
Unifloat* trunc_spec(CallContext context, Unifloat* x);
Unifloat* trunc_model(Unifloat* x);

/********************************************************************/
/**                       UNIFLOAT REAL FUNCTIONS                  **/
/********************************************************************/

Unifloat* floor_Unifloat(Unifloat* x);
IntT check_quo_remquo(Unifloat* x, Unifloat* y, Unifloat* quo);

#endif

