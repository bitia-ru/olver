/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SOCKET_NETDATA_MODEL_SEH
#define SOCKET_NETDATA_MODEL_SEH

#include "common/common_model.seh"


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/
specification typedef struct NetworkOrder4Bytes
{
    CharT arr[4];
} NetworkOrder4Bytes;

specification typedef struct NetworkOrder2Bytes
{
    CharT arr[2];
} NetworkOrder2Bytes;

/** htonl_spec **/
specification
NetworkOrder4Bytes* htonl_spec( CallContext context, UInt32T hostlong);

/** htons_spec **/
specification
NetworkOrder2Bytes* htons_spec( CallContext context, UInt16T hostshort);

/** ntohl_spec **/
specification
UInt32T ntohl_spec( CallContext context, NetworkOrder4Bytes* netlong);
bool htonl_04(NetworkOrder4Bytes* htonl_spec, UInt32T hostlong);

/** ntohs_spec **/
specification
UInt16T ntohs_spec( CallContext context, NetworkOrder2Bytes* netshort);
bool htons_04(NetworkOrder2Bytes* htons_spec, UInt16T hostshort);


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

NetworkOrder4Bytes* create_NetworkOrder4Bytes(CharT first, CharT second,
                                                CharT third, CharT fourth);
NetworkOrder2Bytes* create_NetworkOrder2Bytes(CharT first, CharT second);

UInt16T htons_model(UInt16T hostshort);
UInt16T ntohs_model(UInt16T netshort);
UInt32T htonl_model(UInt32T hostshort);
UInt32T ntohl_model(UInt32T netshort);

#endif

