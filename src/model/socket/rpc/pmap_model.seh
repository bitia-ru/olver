/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef SOCKET_RPC_PMAP_MODEL_SEH
#define SOCKET_RPC_PMAP_MODEL_SEH

#include "common/common_model.seh"
#include "socket/socket/socket_model.seh"

/********************************************************************/
/**                       Pmap Types                               **/
/********************************************************************/

specification typedef struct PmapTriple
{
    ULongT prognum;
    ULongT versnum;
    UIntT protocol;
}PmapTriple;

specification typedef struct PmapPortRec
{
    bool mapped;
    UShortT port;
}PmapPortRec;

bool init_pmap();

PmapPortRec * pmap_find_mappings(ULongT prognum, ULongT versnum);
PmapPortRec * pmap_find_mapping_maxver(ULongT prognum, ULongT protocol);
void pmap_add_mapping(ULongT prognum, ULongT versnum, UIntT protocol, UShortT port);
PmapPortRec * pmap_find_mapping(ULongT prognum, ULongT versnum, UIntT protocol);
void pmap_unset_mappings(ULongT prognum, ULongT versnum);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** pmap_getport_spec **/
specification
UShortT pmap_getport_spec( CallContext context, SockaddrT * addr, 
                          ULongT prognum, ULongT versnum, ULongT protocol );


/** pmap_set_spec **/
specification
BoolT pmap_set_spec( CallContext context, ULongT program, ULongT version, IntT protocol, UShortT port);

void onPmapSet(CallContext context, ULongT program, ULongT version, IntT protocol, UShortT port, BoolT pmap_set_spec);

/** pmap_unset_spec **/
specification
BoolT pmap_unset_spec( CallContext context, ULongT prognum, ULongT versnum );

void onPmapUnset(CallContext context, ULongT prognum, ULongT versnum, BoolT pmap_unset_spec);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

