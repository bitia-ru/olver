/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef FS_MEDIA_SEH
#define FS_MEDIA_SEH

#include "fs/fs/fs_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initFsFsSubsystem(void);

/********************************************************************/
/** Format Functions                                               **/
/********************************************************************/
void writeObject_TSStream( TSStream* stream, Object* value, const char *objectType );
void permissions_formatter(TSStream* stream,FilePermissions* value);

void FileKind_formatter(TSStream *stream, FileKindObj*kind);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** __xmknod_spec **/
mediator __xmknod_media for specification
IntT __xmknod_spec( CallContext context, IntT ver, CString *path, FileKind kind, FilePermissions *perms,  DevT dev, ErrorCode *errno );

/** link_spec **/
mediator link_media for specification
IntT link_spec( CallContext context, CString *path1, CString *path2, ErrorCode *errno, CancelStatus status );

/** remove_spec **/
mediator remove_media for specification
IntT remove_spec( CallContext context, CString *path, ErrorCode *errno, CancelStatus status );

mediator rename_media for specification
IntT rename_spec( CallContext context, CString *oldPath, CString *newPath, ErrorCode *errno, CancelStatus status );

/** unlink_spec **/
mediator unlink_media for specification
IntT unlink_spec( CallContext context, CString *path, ErrorCode *errno, CancelStatus status );




#endif

