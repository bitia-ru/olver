/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef FS_GLOB_MEDIA_SEH
#define FS_GLOB_MEDIA_SEH

#include "fs/glob/glob_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initFsGlobSubsystem(void);

/*****************************************************************************/
/**                   Auxiliary Specification Functions                     **/
/*****************************************************************************/

/** setglob_spec **/
mediator setglob_media for specification
void setglob_spec(CallContext context, GlobTPtr pglob, GlobT *glob);

/** setglob64_spec **/
mediator setglob64_media for specification
void setglob64_spec(CallContext context, Glob64TPtr pglob, Glob64T *glob64);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** glob_spec **/
mediator glob_media for specification
GlobErrorCode glob_spec(CallContext context, CString *pattern, GlobFlags flags,
                        GlobErrorFunction *errfunc, GlobTPtr pglob);

/** glob64_spec **/
mediator glob64_media for specification
GlobErrorCode glob64_spec(CallContext context, CString *pattern, GlobFlags flags,
                          GlobErrorFunction *errfunc, Glob64TPtr pglob);

/** globfree_spec **/
mediator globfree_media for specification
void globfree_spec(CallContext context, GlobTPtr pglob);

/** globfree64_spec **/
mediator globfree64_media for specification
void globfree64_spec(CallContext context, Glob64TPtr pglob);

/********************************************************************/
/**                      Helper Functions                         **/
/********************************************************************/
GlobT *getGlobTState(CallContext context, GlobTPtr pglob, GlobFlags flags);
void mapGlobTStateUp(CallContext context, GlobTPtr pglob, GlobFlags flags);

Glob64T *getGlob64TState(CallContext context, Glob64TPtr pglob, GlobFlags flags);
void mapGlob64TStateUp(CallContext context, Glob64TPtr pglob, GlobFlags flags);

#endif

