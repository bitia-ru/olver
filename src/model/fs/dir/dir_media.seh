/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef FS_DIR_MEDIA_SEH
#define FS_DIR_MEDIA_SEH

#include "fs/dir/dir_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initFsDirSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** closedir_spec **/
mediator closedir_media for specification
IntT closedir_spec( CallContext context, DIRTPtr dirp, ErrorCode *errno, CancelStatus status  );

/** mkdir_spec **/
mediator mkdir_media for specification
IntT mkdir_spec( CallContext context, CString *path, FilePermissions *mode, ErrorCode *errno);

/** opendir_spec **/
mediator opendir_media for specification
DIRTPtr opendir_spec( CallContext context, CString *dirname, ErrorCode *errno, CancelStatus status);

/** readdir_spec **/
mediator readdir_media for specification
DirEntT *readdir_spec( CallContext context, DIRTPtr dirp, ErrorCode *errno, CancelStatus status);

/** readdir64_spec **/
mediator readdir64_media for specification
DirEntT *readdir64_spec( CallContext context, DIRTPtr dirp, ErrorCode *errno);

/** readdir_r_spec **/
mediator readdir_r_media for specification
DirEntT *readdir_r_spec( CallContext context, DIRTPtr dirp, DirEntTPtr *entry, ErrorCode *errno, CancelStatus status );

/** rewinddir_spec **/
mediator rewinddir_media for specification
void rewinddir_spec( CallContext context, DIRTPtr dirp, CancelStatus status);

/** rmdir_spec **/
mediator rmdir_media for specification
IntT rmdir_spec( CallContext context, CString *path, ErrorCode *errno);

/** seekdir_spec **/
mediator seekdir_media for specification
void seekdir_spec( CallContext context, DIRTPtr dirp, LongT loc, CancelStatus status);

/** telldir_spec **/
mediator telldir_media for specification
LongT telldir_spec( CallContext context, DIRTPtr dirp );

/** dirfd_spec **/
mediator dirfd_media for specification
FileDescId dirfd_spec( CallContext context, DIRTPtr dirp, ErrorCode *errno );



#endif

