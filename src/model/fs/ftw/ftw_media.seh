/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef FS_FTW_MEDIA_SEH
#define FS_FTW_MEDIA_SEH

#include "fs/ftw/ftw_model.seh"

/*****************************************************************************/
/**                            Format Functions                             **/
/*****************************************************************************/
void writeNFTWFlagsObj_TSStream(TSStream *stream, NFTWFlagsObj *flags);
void writeFTWFunction_TSStream(TSStream *stream, FTWFunction *fn);

FTWStructure* readFTWStructure_TSStream(TSStream *stream);
FTWFunctionCall* readFTWFunctionCall_TSStream(TSStream *stream);
void readFTWFunctionCalls_TSStream(TSStream *stream, FTWFunction *fn);

/*****************************************************************************/
/**                         Initialization Function                         **/
/*****************************************************************************/
void initFsFtwSubsystem(void);

/*****************************************************************************/
/**                           Interface Functions                           **/
/*****************************************************************************/

/** ftw_spec **/
mediator ftw_media for specification
IntT ftw_spec(CallContext context, CString *path, FTWFunction *fn, IntT ndirs,
              ErrorCode *errno);

/** ftw64_spec **/
mediator ftw64_media for specification
IntT ftw64_spec(CallContext context, CString *path, FTWFunction *fn, IntT ndirs,
                ErrorCode *errno);

/** nftw_spec **/
mediator nftw_media for specification
IntT nftw_spec(CallContext context, CString *path, FTWFunction *fn, IntT fd_limit,
               NFTWFlags flags, ErrorCode *errno);

/** nftw64_spec **/
mediator nftw64_media for specification
IntT nftw64_spec(CallContext context, CString *path, FTWFunction *fn, IntT fd_limit,
                 NFTWFlags flags, ErrorCode *errno);

#endif

