/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef FS_META_ACCESS_MEDIA_SEH
#define FS_META_ACCESS_MEDIA_SEH

#include "fs/meta/access_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initFsMetaAccessSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** access_spec **/
mediator access_media for specification
IntT access_spec( CallContext context, CString* path, AccessModeAccess* amode,
                                                            ErrorCode* errno);

/** chmod_spec **/
mediator chmod_media for specification
IntT chmod_spec( CallContext context, CString* path, FilePermissions* mode,
                                                            ErrorCode* errno);

/** chown_spec **/
mediator chown_media for specification
IntT chown_spec( CallContext context, CString* path, UidT owner, GidT group,
                                                            ErrorCode* errno);

/** fchmod_spec **/
mediator fchmod_media for specification
IntT fchmod_spec( CallContext context, FileDescId fildes,
                                    FilePermissions* mode, ErrorCode* errno);

/** fchown_spec **/
mediator fchown_media for specification
IntT fchown_spec( CallContext context, FileDescId fildes, UidT owner,
                                                GidT group, ErrorCode* errno);

/** lchown_spec **/
mediator lchown_media for specification
IntT lchown_spec( CallContext context, CString* path, UidT owner, GidT group,
                                                            ErrorCode* errno);




#endif

