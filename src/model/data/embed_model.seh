/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef DATA_EMBED_MODEL_SEH
#define DATA_EMBED_MODEL_SEH

/*
 * This file contains definitions of model representations of embedded
 * 'C' data types.
 */

#include "data/basis.seh"

/********************************************************************/
/**           Model Representation of Standard Integer Types       **/
/********************************************************************/
typedef sut_char    CharT;
typedef sut_schar   SCharT;
typedef sut_uchar   UCharT;
typedef sut_short   ShortT;
typedef sut_ushort  UShortT;
typedef sut_int     IntT;
typedef sut_uint    UIntT;
typedef sut_long    LongT;
typedef sut_ulong   ULongT;
typedef sut_llong   LLongT;
typedef sut_ullong  ULLongT;

typedef IntT        BoolT;


/********************************************************************/
/**          Model Representation of Wide Characters Type          **/
/********************************************************************/
typedef sut_wchar_t WCharT;

extern const WCharT NUL_WCharT;
#define NULL_WCharT NUL_WCharT


/********************************************************************/
/**           Model Representation of Real Floating Types          **/
/********************************************************************/
typedef sut_float    FloatT;
typedef sut_double   DoubleT;
typedef sut_ldouble  LongDoubleT;


/********************************************************************/
/**       Model Representation of Exact-Width Integer Types        **/
/********************************************************************/
typedef int8_t    Int8T;
typedef int16_t   Int16T;
typedef int32_t   Int32T;
typedef int64_t   Int64T;
typedef uint8_t   UInt8T;
typedef uint16_t  UInt16T;
typedef uint32_t  UInt32T;
typedef uint64_t  UInt64T;


/********************************************************************/
/**      Model Representation of Greatest-Width Integer Types      **/
/********************************************************************/
typedef sut_intmax_t   IntMaxT;
typedef sut_uintmax_t  UIntMaxT;


/********************************************************************/
/**         Specification Typed for Integer types                  **/
/**                    capable of holding object pointers          **/
/********************************************************************/
typedef sut_intptr_t  IntPtrT;
typedef sut_uintptr_t UIntPtrT;


/********************************************************************/
/**            Model Representation of Other Integer Types         **/
/********************************************************************/
typedef sut_ptrdiff_t PtrDiffT;
typedef sut_size_t    SizeT;
typedef sut_ssize_t   SSizeT;


/********************************************************************/
/**                Model Representation of Pointers                **/
/********************************************************************/
typedef struct VoidTPtr
{
  SystemId  system;
  PidT      process;
  sut_ptr_t address;
} VoidTPtr;

extern const VoidTPtr NULL_VoidTPtr;
extern const VoidTPtr Invalid_VoidTPtr;

/*
 * Returns true if ptr is a NULL pointer.
 */
bool isNULL_VoidTPtr( VoidTPtr ptr );

/*
 * Returns true if ptr == -1
 */
bool isInvalid_VoidTPtr( VoidTPtr ptr );

/*
 * Returns a result of comparison of the arguments.
 */
bool equals_VoidTPtr( VoidTPtr ptr1, VoidTPtr ptr2 );


/********************************************************************/
/**               Pointers to Null Terminated String               **/
/********************************************************************/
typedef VoidTPtr StringTPtr;
typedef VoidTPtr WStringTPtr;


/********************************************************************/
/**                        Typified Pointers                       **/
/********************************************************************/
typedef VoidTPtr CharTPtr;
typedef VoidTPtr WCharTPtr;


/********************************************************************/
/**                             WIntT                              **/
/********************************************************************/
typedef UIntT WIntT;


/********************************************************************/
/**         Specification Types for Standard Integer Types         **/
/********************************************************************/
specification typedef CharT   CharTObj;
specification typedef SCharT  SCharTObj;
specification typedef UCharT  UCharTObj;
specification typedef ShortT  ShortTObj;
specification typedef UShortT UShortTObj;
specification typedef IntT    IntTObj;
specification typedef UIntT   UIntTObj;
specification typedef LongT   LongTObj;
specification typedef ULongT  ULongTObj;
specification typedef LLongT  LLongTObj;
specification typedef ULLongT ULLongTObj;
specification typedef WIntT   WIntTObj;

CharTObj*   create_CharTObj(CharT value);
SCharTObj*  create_SCharTObj(SCharT value);
UCharTObj*  create_UCharTObj(UCharT value);
ShortTObj*  create_ShortTObj(ShortT value);
UShortTObj* create_UShortTObj(UShortT value);
IntTObj*    create_IntTObj(IntT value);
UIntTObj*   create_UIntTObj(UIntT value);
LongTObj*   create_LongTObj(LongT value);
ULongTObj*  create_ULongTObj(ULongT value);
LLongTObj*  create_LLongTObj(LLongT value);
ULLongTObj* create_ULLongTObj(ULLongT value);
WIntTObj*   create_WIntTObj(WIntT value);



/********************************************************************/
/**                       Wide Characters Type                     **/
/********************************************************************/
specification typedef WCharT  WCharTObj;

WCharTObj*  create_WCharTObj(WCharT value);


/********************************************************************/
/**          Specification Types for Real Floating Types           **/
/********************************************************************/
specification typedef FloatT      FloatTObj;
specification typedef DoubleT     DoubleTObj;
specification typedef LongDoubleT LongDoubleTObj;

FloatTObj*      create_FloatTObj(FloatT value);
DoubleTObj*     create_DoubleTObj(DoubleT value);
LongDoubleTObj* create_LongDoubleTObj(LongDoubleT value);


/********************************************************************/
/**       Specification Types for Exact-Width Integer Types        **/
/********************************************************************/
specification typedef Int8T   Int8TObj;
specification typedef Int16T  Int16TObj;
specification typedef Int32T  Int32TObj;
specification typedef Int64T  Int64TObj;
specification typedef UInt8T  UInt8TObj;
specification typedef UInt16T UInt16TObj;
specification typedef UInt32T UInt32TObj;
specification typedef UInt64T UInt64TObj;

Int8TObj*   create_Int8TObj(Int8T value);
Int16TObj*  create_Int16TObj(Int16T value);
Int32TObj*  create_Int32TObj(Int32T value);
Int64TObj*  create_Int64TObj(Int64T value);
UInt8TObj*  create_UInt8TObj(UInt8T value);
UInt16TObj* create_UInt16TObj(UInt16T value);
UInt32TObj* create_UInt32TObj(UInt32T value);
UInt64TObj* create_UInt64TObj(UInt64T value);


/********************************************************************/
/**      Specification Types for Greatest-Width Integer Types      **/
/********************************************************************/
specification typedef IntMaxT  IntMaxTObj;
specification typedef UIntMaxT UIntMaxTObj;

IntMaxTObj*  create_IntMaxTObj(IntMaxT value);
UIntMaxTObj* create_UIntMaxTObj(UIntMaxT value);


/********************************************************************/
/**         Specification Typed for Integer types                  **/
/**                    capable of holding object pointers          **/
/********************************************************************/
specification typedef IntPtrT IntPtrTObj;
specification typedef UIntPtrT UIntPtrTObj;

IntPtrTObj*     create_IntPtrTObj(IntPtrT value);
UIntPtrTObj*    create_UIntPtrTObj(UIntPtrT value);


/********************************************************************/
/**          Specification Types for Other Integer Types           **/
/********************************************************************/
specification typedef PtrDiffT PtrDiffTObj;
specification typedef SizeT    SizeTObj;
specification typedef SSizeT   SSizeTObj;

PtrDiffTObj* create_PtrDiffTObj(PtrDiffT value);
SizeTObj*    create_SizeTObj(SizeT  value);
SSizeTObj*   create_SSizeTObj(SizeT value);


/********************************************************************/
/**                Specification Types for Pointers                **/
/********************************************************************/
specification typedef VoidTPtr VoidTPtrObj;

VoidTPtrObj* create_VoidTPtrObj( VoidTPtr ptr );


#endif
