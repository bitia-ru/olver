/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef COMMON_TSSTREAM_SEH
#define COMMON_TSSTREAM_SEH

#include "common/ts_socket.h"
#include "common/cbytearray.seh"
#include "common/cstring.seh"
#include "common/wchararray.seh"
#include "common/wstring.seh"
#include "data/embed_model.seh"
#include "atl/list.h"


/********************************************************************/
/**                   Model To TSStream Encoding                   **/
/********************************************************************/
void writeEmptyByteArray_TSStream( TSStream* stream );

void writeCByteArray_TSStream( TSStream* stream, CByteArray* array );

void writeWCharArray_TSStream( TSStream* stream, WCharArray* array );

void writeIntList_TSStream( TSStream* stream, List* /*<int>*/ list );

void writeStringLiteral_TSStream( TSStream* stream, const char* string );

void writeString_TSStream( TSStream* stream, String* string );

void writeCString_TSStream( TSStream* stream, CString* string );

void writeWString_TSStream( TSStream* stream, WString* wstring );

/* Standard Integer Types */
void writeChar_TSStream( TSStream* stream, CharT value );

void writeSChar_TSStream( TSStream* stream, SCharT value );

void writeUChar_TSStream( TSStream* stream, UCharT value );

void writeShort_TSStream( TSStream* stream, ShortT value );

void writeUShort_TSStream( TSStream* stream, UShortT value );

void writeInt_TSStream( TSStream* stream, IntT value );

void writeUInt16_TSStream( TSStream* stream, UInt16T value );

void writeUInt_TSStream( TSStream* stream, UIntT value );

void writeUInt32_TSStream( TSStream* stream, UInt32T value );

void writeLong_TSStream( TSStream* stream, LongT value );

void writeLongReal_TSStream( TSStream* stream, LongT value );

void writeULong_TSStream( TSStream* stream, ULongT value );

void writeLLong_TSStream( TSStream* stream, LLongT value );

void writeULLong_TSStream( TSStream* stream, ULLongT value );

void writeWChar_TSStream( TSStream* stream, WCharT value );

void writeSize_TSStream( TSStream* stream, SizeT value );

void writeSSize_TSStream( TSStream* stream, SSizeT value );

void writeIntMaxT_TSStream( TSStream* stream, IntMaxT value );

void writeIntPtrT_TSStream(TSStream* stream, IntPtrT value);

/* Real Floating Types */
// Replaced with Unifloat
/*
void writeFloat_TSStream( TSStream* stream, FloatT value );
void writeDouble_TSStream( TSStream* stream, DoubleT value );
void writeLongDouble_TSStream( TSStream* stream, LongDoubleT value );
*/

/* Pointers */
void writePointer_TSStream( TSStream* stream, VoidTPtr value );

/* Additional Types */
void writeTimeUnit_TSStream( TSStream* stream, TimeUnit value );

void writeFlags_TSStream( TSStream* stream, List* value );


/********************************************************************/
/**                   TSStream To Model Decoding                   **/
/********************************************************************/
CByteArray* readCByteArray_TSStream(TSStream* stream);

WCharArray* readWCharArray_TSStream(TSStream* stream);

char* readStringAsCharArray_TSStream(TSStream* stream);

List* /*<int>*/ readIntList_TSStream(TSStream* stream);

String* readString_TSStream(TSStream* stream);

CString* readCString_TSStream(TSStream* stream);

WString* readWString_TSStream(TSStream* stream);

/* Standard Integer Types */
CharT readChar_TSStream(TSStream* stream);

SCharT readSChar_TSStream(TSStream* stream);

UCharT readUChar_TSStream(TSStream* stream);

ShortT readShort_TSStream(TSStream* stream);

UShortT readUShort_TSStream(TSStream* stream);

IntT readInt_TSStream(TSStream* stream);

UInt16T readUInt16_TSStream(TSStream* stream);

UIntT readUInt_TSStream(TSStream* stream);

UInt32T readUInt32_TSStream(TSStream* stream);

LongT readLong_TSStream(TSStream* stream);

LongT readLongReal_TSStream(TSStream* stream);

ULongT readULong_TSStream(TSStream* stream);

LLongT readLLong_TSStream(TSStream* stream);

ULLongT readULLong_TSStream(TSStream* stream);

WCharT readWChar_TSStream(TSStream* stream);

SizeT readSize_TSStream(TSStream* stream);

SSizeT readSSize_TSStream(TSStream* stream);

IntMaxT readIntMaxT_TSStream(TSStream* stream);

/* Real Floating Types */
FloatT readFloat_TSStream(TSStream* stream);

DoubleT readDouble_TSStream(TSStream* stream);

LongDoubleT readLongDouble_TSStream(TSStream* stream);

/* Pointers */
VoidTPtr readPointer_TSStream(ThreadId threadid,TSStream* stream);

/* Additional Types */
TimeUnit readTimeUnit_TSStream(TSStream* stream);

List* readFlags_TSStream(TSStream* stream);

void readCancelStatus_TSStream(TSStream* stream,CancelStatus status);

#endif
