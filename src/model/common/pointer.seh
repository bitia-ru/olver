/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef COMMON_POINTER_SEH
#define COMMON_POINTER_SEH

#include "common/cbytearray.seh"
#include "common/cstring.seh"
#include "common/wchararray.seh"
#include "common/wstring.seh"
#include "data/embed_model.seh"


/********************************************************************/
/**                Model Representation of Pointer                 **/
/********************************************************************/

/*
 * Returns a result of comparison of the arguments.
 */
bool equals_VoidTPtr( VoidTPtr ptr1, VoidTPtr ptr2 );

/*
 * Returns a result of subtraction of the arguments.
 */
PtrDiffT diff_VoidTPtr( VoidTPtr ptr1, VoidTPtr ptr2 );

/*
 * Returns a result of addition of the arguments.
 */
VoidTPtr add_VoidTPtr( VoidTPtr ptr, LongT index );

/*
 * Returns a result of subtraction of the arguments.
 */
VoidTPtr subtract_VoidTPtr( VoidTPtr ptr, LongT index );


/********************************************************************/
/**                           Memory Readers                       **/
/********************************************************************/
CharT   readChar_VoidTPtr( VoidTPtr ptr );
SCharT  readSChar_VoidTPtr( VoidTPtr ptr );
UCharT  readUChar_VoidTPtr( VoidTPtr ptr );
ShortT  readShort_VoidTPtr( VoidTPtr ptr );
UShortT readUShort_VoidTPtr( VoidTPtr ptr );
IntT    readInt_VoidTPtr( VoidTPtr ptr );
UIntT   readUInt_VoidTPtr( VoidTPtr ptr );
LongT   readLong_VoidTPtr( VoidTPtr ptr );
ULongT  readULong_VoidTPtr( VoidTPtr ptr );
LLongT  readLLong_VoidTPtr( VoidTPtr ptr );
ULLongT readULLong_VoidTPtr( VoidTPtr ptr );

WCharT  readWChar_VoidTPtr( VoidTPtr ptr );

CByteArray* readCByteArray_VoidTPtr( VoidTPtr ptr, SizeT size );
WCharArray* readWCharArray_VoidTPtr( VoidTPtr ptr, SizeT size );
String*     readString_VoidTPtr( VoidTPtr ptr );
String*     readLimitedString_VoidTPtr( VoidTPtr ptr, SizeT size );
CString*    readCString_VoidTPtr( VoidTPtr ptr );
CString*    readLimitedCString_VoidTPtr( VoidTPtr ptr, SizeT size );
WString*    readWString_VoidTPtr( VoidTPtr ptr );
WString*    readLimitedWString_VoidTPtr( VoidTPtr ptr, SizeT size );

VoidTPtr    readPointer_VoidTPtr(CallContext context, VoidTPtr ptr );
/********************************************************************/
/**                           Memory Writers                       **/
/********************************************************************/
bool writeChar_VoidTPtr( VoidTPtr ptr, CharT value );
bool writeSChar_VoidTPtr( VoidTPtr ptr, SCharT value );
bool writeUChar_VoidTPtr( VoidTPtr ptr, UCharT value );
bool writeShort_VoidTPtr( VoidTPtr ptr, ShortT value );
bool writeUShort_VoidTPtr( VoidTPtr ptr, UShortT value );
bool writeInt_VoidTPtr( VoidTPtr ptr, IntT value );
bool writeUInt_VoidTPtr( VoidTPtr ptr, UIntT value );
bool writeLong_VoidTPtr( VoidTPtr ptr, LongT value );
bool writeULong_VoidTPtr( VoidTPtr ptr, ULongT value );
bool writeLLong_VoidTPtr( VoidTPtr ptr, LLongT value );
bool writeULLong_VoidTPtr( VoidTPtr ptr, ULLongT value );

bool writeWChar_VoidTPtr( VoidTPtr ptr, WCharT value );

bool writeCByteArray_VoidTPtr( VoidTPtr ptr, CByteArray* value );
bool writeWCharArray_VoidTPtr( VoidTPtr ptr, WCharArray* value );
bool writeString_VoidTPtr( VoidTPtr ptr, String* value );
bool writeCString_VoidTPtr( VoidTPtr ptr, CString* value );
bool writeWString_VoidTPtr( VoidTPtr ptr, WString* value );

bool writePointer_VoidTPtr(CallContext context, VoidTPtr ptr, VoidTPtr value);


#endif
