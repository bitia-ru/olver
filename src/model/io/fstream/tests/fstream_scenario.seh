/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef IO_FSTREAM_SCENARIO_SEH
#define IO_FSTREAM_SCENARIO_SEH

/********************************************************************/
/**                       Test Scenario Data                       **/
/********************************************************************/

specification typedef struct FileShortInfo { CString   * name;
                                             CString   * mode;
                                             bool        is64;
                                             FILETPtr    desc;
                                           } FileShortInfo;
void setDesc_FileShortInfo( FileShortInfo * thisFileShortInfo, FILETPtr desc );
// name is     NULL, desc is     NULL => no file
// name is     NULL, desc is not NULL => error
// name is not NULL, desc is     NULL => closed file
// name is not NULL, desc is not NULL => opened file
bool isNoFile_FileShortInfo    ( /* const */ FileShortInfo * thisFileShortInfo );
bool isClosedFile_FileShortInfo( /* const */ FileShortInfo * thisFileShortInfo );
bool isOpenedFile_FileShortInfo( /* const */ FileShortInfo * thisFileShortInfo );
// name is not NULL => existed file (closed or opened)
bool isExistedFile_FileShortInfo( /* const */ FileShortInfo * thisFileShortInfo );

#endif
