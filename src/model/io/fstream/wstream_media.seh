/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef IO_FSTREAM_WSTREAM_MEDIA_SEH
#define IO_FSTREAM_WSTREAM_MEDIA_SEH

#include "io/fstream/wstream_model.seh"

/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/

void initIoFstreamWstreamSubsystem(void);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** fgetwc_spec **/
//This mediator refers to: fgetwc, fgetwc_unlocked, getwc, getwchar
mediator fgetwc_media for specification
WIntT fgetwc_spec( CallContext context, FILETPtr stream, ErrorCode * errno,
                   IntT getwc_type, WString * input, CString * stdinAsFile
                 );

/** fgetws_spec **/
mediator fgetws_media for specification
WString * fgetws_spec( CallContext context, IntT n, FILETPtr stream, ErrorCode * errno );

/** fputwc_spec **/
//This mediator refers to: fputwc, putwc, putwchar
mediator fputwc_media for specification
WIntT fputwc_spec( CallContext context, WCharT wc, FILETPtr stream, ErrorCode * errno, IntT putwc_type );

/** fputws_spec **/
mediator fputws_media for specification
IntT fputws_spec( CallContext context, WString * ws, FILETPtr stream, ErrorCode * errno );

/** fwide_spec **/
mediator fwide_media for specification
IntT fwide_spec( CallContext context, FILETPtr stream, IntT mode, ErrorCode * errno );

/** ungetwc_spec **/
mediator ungetwc_media for specification
WIntT ungetwc_spec( CallContext context, WIntT wc, FILETPtr stream, ErrorCode * errno, bool toStdin );

#endif
