/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PROCESS_RESOURCES_MEDIA_SEH
#define PROCESS_RESOURCES_MEDIA_SEH

#include "process/resources/resources_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initProcessResourcesSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** getrlimit_spec **/
mediator getrlimit_media for specification
IntT getrlimit_spec( CallContext context, IntT resource, RLimitT * rlp, ErrorCode * errno );

/** setrlimit_spec **/
mediator setrlimit_media for specification
IntT setrlimit_spec( CallContext context, IntT resource, RLimitT * rlp, ErrorCode * errno );

/** getrusage_spec **/
mediator getrusage_media for specification
IntT getrusage_spec( CallContext context, IntT who, RusageT * r_usage, ErrorCode * errno);

/** getrlimit64_spec **/
mediator getrlimit64_media for specification
IntT getrlimit64_spec( CallContext context, IntT resource, RLimit64T * rlp, ErrorCode * errno);

/** setrlimit64_spec **/
//This mediator refers to: setrlimit64, setrlimit
mediator setrlimit64_media for specification
IntT setrlimit64_spec( CallContext context, IntT resource, RLimit64T * rlp, ErrorCode * errno);

/** ulimit_spec **/
mediator ulimit_media for specification
LongT ulimit_spec( CallContext context, IntT cmd, List * params, ErrorCode * errno );


#endif

/************************************************************************/
/*                       Helper Functions                               */
/************************************************************************/

void readRUsage_TSStream(TSStream* stream, RusageT * r_usage);
