/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PROCESS_SCHEDULER_MEDIA_SEH
#define PROCESS_SCHEDULER_MEDIA_SEH

#include "process/scheduler/scheduler_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initProcessSchedulerSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** sched_get_priority_max_spec **/
//This mediator refers to: sched_get_priority_min, sched_get_priority_max
mediator sched_get_priority_min_max_media for specification
IntT sched_get_priority_min_max_spec( CallContext context, IntT policy, ErrorCode* errno, bool min);

/** sched_getparam_spec **/
mediator sched_getparam_media for specification
SchedGetParamReturnType* sched_getparam_spec( CallContext context, PidT pid, ErrorCode* errno);

/** sched_getscheduler_spec **/
mediator sched_getscheduler_media for specification
IntT sched_getscheduler_spec(CallContext context, PidT pid, ErrorCode* errno);

/** sched_rr_get_interval_spec **/
mediator sched_rr_get_interval_media for specification
RRGetIntervalReturnType* sched_rr_get_interval_spec( CallContext context, PidT pid, ErrorCode* errno);

/** sched_setparam_spec **/
mediator sched_setparam_media for specification
IntT sched_setparam_spec( CallContext context, PidT pid, ShedParam* param, ErrorCode* errno);

/** sched_setscheduler_spec **/
mediator sched_setscheduler_media for specification
IntT sched_setscheduler_spec( CallContext context, PidT pid, IntT policy, IntT* former_policy, ShedParam* param, ErrorCode* errno);

/** sched_yield_spec **/
mediator sched_yield_media for specification
IntT sched_yield_spec( CallContext context, ErrorCode * errno );




#endif

