/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PROCESS_META_USER_MEDIA_SEH
#define PROCESS_META_USER_MEDIA_SEH

#include "process/meta/user_model.seh"

/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/

void initProcessMetaUserSubsystem(void);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** cuserid_spec **/
mediator cuserid_media for specification
StringTPtr cuserid_spec( CallContext context, StringTPtr s );

/** getegid_spec **/
mediator getegid_media for specification
GidT getegid_spec( CallContext context );

/** geteuid_spec **/
mediator geteuid_media for specification
UidT geteuid_spec( CallContext context );

/** getgid_spec **/
mediator getgid_media for specification
GidT getgid_spec( CallContext context );

/** getgroups_spec **/
mediator getgroups_media for specification
IntT getgroups_spec( CallContext context, IntT gidsetsize, List * grouplist, ErrorCode * errno )
   updates grouplist
   writes  * errno
;

/** getuid_spec **/
mediator getuid_media for specification
UidT getuid_spec( CallContext context );

/** initgroups_spec **/
mediator initgroups_media for specification
IntT initgroups_spec( CallContext context, CString * user, GidT group, ErrorCode * errno )
   reads  user
   writes * errno
;

/** setegid_spec **/
mediator setegid_media for specification
IntT setegid_spec( CallContext context, GidT gid, ErrorCode * errno )
   writes * errno
;

/** seteuid_spec **/
mediator seteuid_media for specification
IntT seteuid_spec( CallContext context, UidT uid, ErrorCode * errno )
   writes * errno
;

/** setgid_spec **/
mediator setgid_media for specification
IntT setgid_spec( CallContext context, GidT gid, ErrorCode * errno )
   writes * errno
;

/** setgroups_spec **/
mediator setgroups_media for specification
IntT setgroups_spec( CallContext context, SizeT size, List * list /* & type_GidTObj */, ErrorCode * errno )
   reads  list
   writes * errno
;

/** setregid_spec **/
mediator setregid_media for specification
IntT setregid_spec( CallContext context, GidT rgid, GidT egid, ErrorCode * errno )
   writes * errno
;

/** setreuid_spec **/
mediator setreuid_media for specification
IntT setreuid_spec( CallContext context, UidT ruid, UidT euid, ErrorCode * errno )
   writes * errno
;

/** setuid_spec **/
mediator setuid_media for specification
IntT setuid_spec( CallContext context, UidT uid, ErrorCode * errno )
   writes * errno
;

#endif
