/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PROCESS_IPC_MSG_MODEL_SEH
#define PROCESS_IPC_MSG_MODEL_SEH

#include "common/common_model.seh"
#include "process/ipc/ipc_model.seh"
#include "data/sys/types_model.seh"
#include "fs/fs/fs_model.seh"


/********************************************************************/
/**                      Definitions                               **/
/********************************************************************/

typedef UShortT MsgLenT;
typedef UShortT MsgNumT;


typedef enum MsgCtlCommand
{
    SUT_IPC_STAT  = 2,
    SUT_IPC_SET = 1, 
    SUT_IPC_RMID = 0 
} MsgCtlCommand;


/********************************************************************/
/**                      IpcPerm Data Type                         **/
/********************************************************************/

specification typedef struct IpcPerm
{
    UidT     uid;          //  Owner's user ID. 
    GidT     gid;          //  Owner's group ID. 
    UidT     cuid;         //  Creator's user ID. 
    GidT     cgid;         //  Creator's group ID. 
    FilePermissions *mode; //  Read/write permission. 
} IpcPerm;

IpcPerm* create_IpcPerm(UidT uid, GidT gid, UidT cuid, GidT cgid, FilePermissions* mode);


/********************************************************************/
/**                      MsqidDs Data Type                         **/
/********************************************************************/

specification typedef struct MsqidDs
{
    IpcPerm*       msg_perm;    // Operation permission structure. 
    MsgNumT        msg_qnum;   // Number of messages currently on queue. 
    MsgLenT        msg_qbytes; // Maximum number of bytes allowed on queue. 
    PidT           msg_lspid;  // Process ID of last msgsnd
    PidT           msg_lrpid;  // Process ID of last msgrcv
    TimeT          msg_stime;  // Time of last msgsnd
    TimeT          msg_rtime;  // Time of last msgrcv
    TimeT          msg_ctime;  // Time of last change. 
} MsqidDs;

MsqidDs* create_MsqidDs(IpcPerm* msg_perm, MsgNumT msg_qnum, MsgLenT msg_qbytes, PidT msg_lspid, 
                        PidT msg_lrpid, TimeT msg_stime, TimeT msg_rtime, TimeT msg_ctime);


/********************************************************************/
/**                      Helper Data Types                         **/
/********************************************************************/

specification typedef struct MsgRcvReturnType
{
    SSizeT funcRes;
    CByteArray* dataRecieved;
}MsgRcvReturnType;

MsgRcvReturnType * create_MsgRcvReturnType(
    SSizeT funcRes,
    CByteArray* dataRecieved
);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** msgctl_spec **/
specification
IntT msgctl_spec( CallContext context, IntT msqid, MsgCtlCommand cmd, MsqidDs* buf, ErrorCode* errno);

/** msgget_spec **/
specification
IntT msgget_spec( CallContext context, KeyT key, IntT msgflg, ErrorCode* errno);

/** msgrcv_spec **/
specification
MsgRcvReturnType* msgrcv_spec( CallContext context, IntT msqid, SizeT msgsz, LongT msgtyp, IntT msgflg, ErrorCode* errno);

/** msgsnd_spec **/
specification
IntT msgsnd_spec( CallContext context, IntT msgid, LongT mtype, CByteArray* mtext, IntT msgflag, ErrorCode* errno);


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

