/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef PROCESS_FENV_MODEL_SEH
#define PROCESS_FENV_MODEL_SEH

#include "common/common_model.seh"
#include "process/fenv/fenv_common.seh"

/*****************************************************************************/
/**                            Defines                                      **/
/*****************************************************************************/
#ifdef NewCTesK
    #define FENV_EXCEPTIONS_COVERAGE(covid, covstr, excepts)                      \
    {                                                                             \
        switch((excepts.divbyzero ? 0x01 : 0x00) |                                \
               (excepts.inexact   ? 0x02 : 0x00) |                                \
               (excepts.invalid   ? 0x04 : 0x00) |                                \
               (excepts.overflow  ? 0x08 : 0x00) |                                \
               (excepts.underflow ? 0x10 : 0x00))                                 \
        {                                                                         \
            case  0:                                                              \
                return { covid##_None,                                            \
                    covstr ", None of the exceptions" };                          \
            case  1:                                                              \
                return { covid##_DIVBYZERO,                                       \
                    covstr ", DIVBYZERO" };                                       \
            case  2:                                                              \
                return { covid##_INEXACT,                                         \
                    covstr ", INEXACT" };                                         \
            case  3:                                                              \
                return { covid##_DIVBYZERO_INEXACT,                               \
                    covstr ", DIVBYZERO,INEXACT" };                               \
            case  4:                                                              \
                return { covid##_INVALID,                                         \
                    covstr ", INVALID" };                                         \
            case  5:                                                              \
                return { covid##_DIVBYZERO_INVALID,                               \
                    covstr ", DIVBYZERO,INVALID" };                               \
            case  6:                                                              \
                return { covid##_DIVBYZERO_INEXACT_2,                             \
                	covstr ", DIVBYZERO,INEXACT"};                                \
            case  7:                                                              \
                return { covid##_DIVBYZERO_INEXACT_DIVBYZERO,                     \
                    covstr ", DIVBYZERO,INEXACT,DIVBYZERO" };                     \
            case  8:                                                              \
                return { covid##_OVERFLOW,                                        \
                    covstr ", OVERFLOW" };                                        \
            case  9:                                                              \
                return { covid##_DIVBYZERO_OVERFLOW,                              \
                    covstr ", DIVBYZERO,OVERFLOW" };                              \
            case 10:                                                              \
                return { covid##_INEXACT_OVERFLOW,                                \
                    covstr ", INEXACT,OVERFLOW" };                                \
            case 11:                                                              \
                return { covid##_DIVBYZERO_INEXACT_OVERFLOW,                      \
                    covstr ", DIVBYZERO,INEXACT,OVERFLOW" };                      \
            case 12:                                                              \
                return { covid##_INVALID_OVERFLOW,                                \
                    covstr ", INVALID,OVERFLOW" };                                \
            case 13:                                                              \
                return { covid##_DIVBYZERO_INVALID_OVERFLOW,                      \
                    covstr ", DIVBYZERO,INVALID,OVERFLOW" };                      \
            case 14:                                                              \
                return { covid##_INEXACT_INVALID_OVERFLOW,                        \
                    covstr ", INEXACT,INVALID,OVERFLOW" };                        \
            case 15:                                                              \
                return { covid##_DIVBYZERO_INEXACT_INVALID_OVERFLOW,              \
                    covstr ", DIVBYZERO,INEXACT,INVALID,OVERFLOW" };              \
            case 16:                                                              \
                return { covid##_UNDERFLOW,                                       \
                    covstr ", UNDERFLOW" };                                       \
            case 17:                                                              \
                return { covid##_DIVBYZERO_UNDERFLOW,                             \
                    covstr ", DIVBYZERO,UNDERFLOW" };                             \
            case 18:                                                              \
                return { covid##_INEXACT_UNDERFLOW,                               \
                    covstr ", INEXACT,UNDERFLOW" };                               \
            case 19:                                                              \
                return { covid##_DIVBYZERO_INEXACT_UNDERFLOW,                     \
                    covstr ", DIVBYZERO,INEXACT,UNDERFLOW" };                     \
            case 20:                                                              \
                return { covid##_INVALID_UNDERFLOW,                               \
                    covstr ", INVALID,UNDERFLOW" };                               \
            case 21:                                                              \
                return { covid##_DIVBYZERO_INVALID_UNDERFLOW,                     \
                    covstr ", DIVBYZERO,INVALID,UNDERFLOW" };                     \
            case 22:                                                              \
                return { covid##_DIVBYZERO_INEXACT_UNDERFLOW_2,                   \
                	covstr ", DIVBYZERO,INEXACT,UNDERFLOW"  };                    \
            case 23:                                                              \
                return { covid##_DIVBYZERO_INEXACT_DIVBYZERO_UNDERFLOW,           \
                    covstr ", DIVBYZERO,INEXACT,DIVBYZERO,UNDERFLOW" };           \
            case 24:                                                              \
                return { covid##_OVERFLOW_UNDERFLOW,                              \
                    covstr ", OVERFLOW,UNDERFLOW" };                              \
            case 25:                                                              \
                return { covid##_DIVBYZERO_OVERFLOW_UNDERFLOW,                    \
                    covstr ", DIVBYZERO,OVERFLOW,UNDERFLOW" };                    \
            case 26:                                                              \
                return { covid##_INEXACT_OVERFLOW_UNDERFLOW,                      \
                    covstr ", INEXACT,OVERFLOW,UNDERFLOW" };                      \
            case 27:                                                              \
                return { covid##_DIVBYZERO_INEXACT_OVERFLOW_UNDERFLOW,            \
                    covstr ", DIVBYZERO,INEXACT,OVERFLOW,UNDERFLOW" };            \
            case 28:                                                              \
                return { covid##_INVALID_OVERFLOW_UNDERFLOW,                      \
                    covstr ", INVALID,OVERFLOW,UNDERFLOW" };                      \
            case 29:                                                              \
                return { covid##_DIVBYZERO_INVALID_OVERFLOW_UNDERFLOW,            \
                    covstr ", DIVBYZERO,INVALID,OVERFLOW,UNDERFLOW" };            \
            case 30:                                                              \
                return { covid##_INEXACT_INVALID_OVERFLOW_UNDERFLOW,              \
                    covstr ", INEXACT,INVALID,OVERFLOW,UNDERFLOW" };              \
            case 31:                                                              \
                return { covid##_DIVBYZERO_INEXACT_INVALID_OVERFLOW_UNDERFLOW,    \
                    covstr ", DIVBYZERO,INEXACT,INVALID,OVERFLOW,UNDERFLOW" };    \
        }                                                                         \
    }
#else
    #define FENV_EXCEPTIONS_COVERAGE(covid, covstr, excepts)                      \
    {                                                                             \
        switch((excepts.divbyzero ? 0x01 : 0x00) |                                \
               (excepts.inexact   ? 0x02 : 0x00) |                                \
               (excepts.invalid   ? 0x04 : 0x00) |                                \
               (excepts.overflow  ? 0x08 : 0x00) |                                \
               (excepts.underflow ? 0x10 : 0x00))                                 \
        {                                                                         \
            case  0:                                                              \
                return { covid##_None,                                            \
                    covstr ", None of the exceptions" };                          \
            case  1:                                                              \
                return { covid##_DIVBYZERO,                                       \
                    covstr ", DIVBYZERO" };                                       \
            case  2:                                                              \
                return { covid##_INEXACT,                                         \
                    covstr ", INEXACT" };                                         \
            case  3:                                                              \
                return { covid##_DIVBYZERO_INEXACT,                               \
                    covstr ", DIVBYZERO,INEXACT" };                               \
            case  4:                                                              \
                return { covid##_INVALID,                                         \
                    covstr ", INVALID" };                                         \
            case  5:                                                              \
                return { covid##_DIVBYZERO_INVALID,                               \
                    covstr ", DIVBYZERO,INVALID" };                               \
            case  6:                                                              \
                return { covid##_DIVBYZERO_INEXACT,                               \
                    covstr ", DIVBYZERO,INEXACT" };                               \
            case  7:                                                              \
                return { covid##_DIVBYZERO_INEXACT_DIVBYZERO,                     \
                    covstr ", DIVBYZERO,INEXACT,DIVBYZERO" };                     \
            case  8:                                                              \
                return { covid##_OVERFLOW,                                        \
                    covstr ", OVERFLOW" };                                        \
            case  9:                                                              \
                return { covid##_DIVBYZERO_OVERFLOW,                              \
                    covstr ", DIVBYZERO,OVERFLOW" };                              \
            case 10:                                                              \
                return { covid##_INEXACT_OVERFLOW,                                \
                    covstr ", INEXACT,OVERFLOW" };                                \
            case 11:                                                              \
                return { covid##_DIVBYZERO_INEXACT_OVERFLOW,                      \
                    covstr ", DIVBYZERO,INEXACT,OVERFLOW" };                      \
            case 12:                                                              \
                return { covid##_INVALID_OVERFLOW,                                \
                    covstr ", INVALID,OVERFLOW" };                                \
            case 13:                                                              \
                return { covid##_DIVBYZERO_INVALID_OVERFLOW,                      \
                    covstr ", DIVBYZERO,INVALID,OVERFLOW" };                      \
            case 14:                                                              \
                return { covid##_INEXACT_INVALID_OVERFLOW,                        \
                    covstr ", INEXACT,INVALID,OVERFLOW" };                        \
            case 15:                                                              \
                return { covid##_DIVBYZERO_INEXACT_INVALID_OVERFLOW,              \
                    covstr ", DIVBYZERO,INEXACT,INVALID,OVERFLOW" };              \
            case 16:                                                              \
                return { covid##_UNDERFLOW,                                       \
                    covstr ", UNDERFLOW" };                                       \
            case 17:                                                              \
                return { covid##_DIVBYZERO_UNDERFLOW,                             \
                    covstr ", DIVBYZERO,UNDERFLOW" };                             \
            case 18:                                                              \
                return { covid##_INEXACT_UNDERFLOW,                               \
                    covstr ", INEXACT,UNDERFLOW" };                               \
            case 19:                                                              \
                return { covid##_DIVBYZERO_INEXACT_UNDERFLOW,                     \
                    covstr ", DIVBYZERO,INEXACT,UNDERFLOW" };                     \
            case 20:                                                              \
                return { covid##_INVALID_UNDERFLOW,                               \
                    covstr ", INVALID,UNDERFLOW" };                               \
            case 21:                                                              \
                return { covid##_DIVBYZERO_INVALID_UNDERFLOW,                     \
                    covstr ", DIVBYZERO,INVALID,UNDERFLOW" };                     \
            case 22:                                                              \
                return { covid##_DIVBYZERO_INEXACT_UNDERFLOW,                     \
                    covstr ", DIVBYZERO,INEXACT,UNDERFLOW" };                     \
            case 23:                                                              \
                return { covid##_DIVBYZERO_INEXACT_DIVBYZERO_UNDERFLOW,           \
                    covstr ", DIVBYZERO,INEXACT,DIVBYZERO,UNDERFLOW" };           \
            case 24:                                                              \
                return { covid##_OVERFLOW_UNDERFLOW,                              \
                    covstr ", OVERFLOW,UNDERFLOW" };                              \
            case 25:                                                              \
                return { covid##_DIVBYZERO_OVERFLOW_UNDERFLOW,                    \
                    covstr ", DIVBYZERO,OVERFLOW,UNDERFLOW" };                    \
            case 26:                                                              \
                return { covid##_INEXACT_OVERFLOW_UNDERFLOW,                      \
                    covstr ", INEXACT,OVERFLOW,UNDERFLOW" };                      \
            case 27:                                                              \
                return { covid##_DIVBYZERO_INEXACT_OVERFLOW_UNDERFLOW,            \
                    covstr ", DIVBYZERO,INEXACT,OVERFLOW,UNDERFLOW" };            \
            case 28:                                                              \
                return { covid##_INVALID_OVERFLOW_UNDERFLOW,                      \
                    covstr ", INVALID,OVERFLOW,UNDERFLOW" };                      \
            case 29:                                                              \
                return { covid##_DIVBYZERO_INVALID_OVERFLOW_UNDERFLOW,            \
                    covstr ", DIVBYZERO,INVALID,OVERFLOW,UNDERFLOW" };            \
            case 30:                                                              \
                return { covid##_INEXACT_INVALID_OVERFLOW_UNDERFLOW,              \
                    covstr ", INEXACT,INVALID,OVERFLOW,UNDERFLOW" };              \
            case 31:                                                              \
                return { covid##_DIVBYZERO_INEXACT_INVALID_OVERFLOW_UNDERFLOW,    \
                    covstr ", DIVBYZERO,INEXACT,INVALID,OVERFLOW,UNDERFLOW" };    \
        }                                                                         \
    }
#endif

/*****************************************************************************/
/**                          Interface Functions                            **/
/*****************************************************************************/

/** feclearexcept_spec **/
specification
IntT feclearexcept_spec(CallContext context, FEnvExceptions excepts);

void onFEClearExcept(CallContext context, FEnvExceptions excepts, IntT feclearexcept_spec);

/** fegetenv_spec **/
specification
IntT fegetenv_spec(CallContext context, FEnvTPtr envp);

void onFEGetEnv(CallContext context, FEnvTPtr envp, IntT fegetenv_spec);

/** fegetexceptflag_spec **/
specification
IntT fegetexceptflag_spec(CallContext context, FExceptTPtr flagp, FEnvExceptions excepts);

void onFEGetExceptFlag(CallContext context, FExceptTPtr flagp, FEnvExceptions excepts,
                       IntT fegetexceptflag_spec);

/** fegetround_spec **/
specification
IntT fegetround_spec(CallContext context);

void onFEGetRound(CallContext context, IntT fegetround_spec);

/** feholdexcept_spec **/
specification
IntT feholdexcept_spec(CallContext context, FEnvTPtr envp);

void onFEHoldExcept(CallContext context, FEnvTPtr envp, IntT feholdexcept_spec);

/** feraiseexcept_spec **/
specification
IntT feraiseexcept_spec(CallContext context, FEnvExceptions excepts);

void onFERaiseExcept(CallContext context, FEnvExceptions excepts, IntT feraiseexcept_spec);

/** fesetenv_spec **/
specification
IntT fesetenv_spec(CallContext context, FEnvTPtr envp);

void onFESetEnv(CallContext context, FEnvTPtr envp, IntT fesetenv_spec);

/** fesetexceptflag_spec **/
specification
IntT fesetexceptflag_spec(CallContext context, FExceptTPtr flagp, FEnvExceptions excepts);

void onFESetExceptFlag(CallContext context, FExceptTPtr flagp, FEnvExceptions excepts,
                       IntT fesetexceptflag_spec);

/** fesetround_spec **/
specification
IntT fesetround_spec(CallContext context, IntT round);

void onFESetRound(CallContext context, IntT round, IntT fesetround_spec);

/** fetestexcept_spec **/
specification
FEnvExceptions fetestexcept_spec(CallContext context, FEnvExceptions excepts);

/** feupdateenv_spec **/
specification
IntT feupdateenv_spec(CallContext context, FEnvTPtr envp);

void onFEUpdateEnv(CallContext context, FEnvTPtr envp, IntT feupdateenv_spec);

/** matherr_spec **/
// TODO:
specification
IntT matherr_spec(CallContext context);

#endif

