/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef PROCESS_GOTO_MEDIA_SEH
#define PROCESS_GOTO_MEDIA_SEH

#include "process/goto/goto_model.seh"

/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/

void initProcessGotoSubsystem(void);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** __sigsetjmp_spec **/
mediator __sigsetjmp_media for specification
IntT __sigsetjmp_spec( CallContext context, SigJmpBuf * env, IntT savemask );

/** _longjmp_spec **/
mediator _longjmp_media for specification
IntT _longjmp_spec( CallContext context, JmpBuf * env, IntT val );

/** _setjmp_spec **/
mediator _setjmp_media for specification
IntT _setjmp_spec( CallContext context, JmpBuf * env );

/** longjmp_spec **/
mediator longjmp_media for specification
IntT longjmp_spec( CallContext context, JmpBuf * env, IntT val );

/** siglongjmp_spec **/
mediator siglongjmp_media for specification
IntT siglongjmp_spec( CallContext context, SigJmpBuf * env, IntT val );

/********************************************************************/
/**                  write-read for user types                     **/
/********************************************************************/

/* $(sigjmp_buf) */
void writeSigJmpBuf_TSStream( TSStream * stream, SigJmpBuf * value );

void sigjmp_buf_formatter( TSStream * stream, SigJmpBuf * value );

void readSigJmpBuf_TSStream( TSStream * stream, SigJmpBuf * value );

/* $(jmp_buf) */
void writeJmpBuf_TSStream( TSStream * stream, JmpBuf * value );

void jmp_buf_formatter( TSStream * stream, JmpBuf * value );

void readJmpBuf_TSStream( TSStream * stream, JmpBuf * value );

#endif
