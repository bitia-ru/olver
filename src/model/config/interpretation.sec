/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



#include "config/interpretation.seh"

/********************************************************************/
/**                        util.search.tree                        **/
/********************************************************************/

static PosixSearchTreeWalkLevelInterpretation tree_walk_level_interpretation;

PosixSearchTreeWalkLevelInterpretation getPosixSearchTreeWalkLevelInterpretation(void)
{
  return tree_walk_level_interpretation;
}

void setPosixSearchTreeWalkLevelInterpretation( PosixSearchTreeWalkLevelInterpretation interpretation )
{
  if (tree_walk_level_interpretation == POSIX_SEARCH_TREE_WALK_LEVEL_UNKNOWN)
    tree_walk_level_interpretation = interpretation;
}

/************************************************************************/
/**                        process.resources                           **/
/************************************************************************/

static UlimitBehaviorKind ulimit_behavior_kind = UlimitBehaviorLSB;

UlimitBehaviorKind getUlimitBehaviorKind(void)
{
    return ulimit_behavior_kind;
}

void setUlimitBehaviorKind( UlimitBehaviorKind interpretation )
{
    ulimit_behavior_kind = interpretation;
}

/************************************************************************/
/**                        util.conversion.token                       **/
/************************************************************************/
static PosixStrtokBufferClearsInterpretation strtok_buffer_clears_interpretation;

PosixStrtokBufferClearsInterpretation getPosixStrtokBufferClearsInterpretation(void)
{
  return strtok_buffer_clears_interpretation;
}

void setPosixStrtokBufferClearsInterpretation( PosixStrtokBufferClearsInterpretation interpretation )
{
  if (strtok_buffer_clears_interpretation == POSIX_STRTOK_BUFFER_CLEARS_UNKNOWN)
    strtok_buffer_clears_interpretation = interpretation;
}
/************************************************************************/
/*                              util.getopt                             */
/************************************************************************/

static PosixGetoptValuepChangingInterpretation posix_getopt_valuep_changing_interpretation;

PosixGetoptValuepChangingInterpretation getPosixGetoptValuepChangingInterpretation(void)
{
  return posix_getopt_valuep_changing_interpretation;
}

void setPosixGetoptValuepChangingInterpretation( PosixGetoptValuepChangingInterpretation interpretation )
{
    posix_getopt_valuep_changing_interpretation = interpretation;
}

/************************************************************************/
/*                              Temporary here                          */
/************************************************************************/

#define GET_STR_VALUE(var_name) { func_get_str_value(#var_name, &var_name); }
#define GET_INT_VALUE(var_name) { func_get_int_value(#var_name, &var_name);   } 
#define GET_BOOL_VALUE(var_name) { func_get_bool_value(#var_name, &var_name);    }

void func_get_str_value(char* name, const char ** var);
void func_get_int_value(char* name, int* var);
void func_get_bool_value(char* name, bool* var);

void load_config_from_tree(void)
{
	    #include "config_loader_gen.h"
}