/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef CONFIG_INTERPRETATION_SEH
#define CONFIG_INTERPRETATION_SEH

/********************************************************************/
/**                        util.getopt                             **/
/********************************************************************/
/*
 * POSIX_GETSUBOPT_VALUEP_POSIX -- valuep changes even if option argument
 *                                  doesn't contained in keylistp
 * POSIX_GETSUBOPT_VALUEP_IMPLEMENTATION -- if option argument doesn't
 *                contained in keylistp, valuep points to that option argument
 */
typedef enum PosixGetoptValuepChangingInterpretation
{
  POSIX_GETSUBOPT_VALUEP_POSIX,
  POSIX_GETSUBOPT_VALUEP_IMPLEMENTATION
} PosixGetoptValuepChangingInterpretation;

PosixGetoptValuepChangingInterpretation getPosixGetoptValuepChangingInterpretation(void);
void setPosixGetoptValuepChangingInterpretation( PosixGetoptValuepChangingInterpretation interpretation );

/********************************************************************/
/**                        util.conversion.token                   **/
/********************************************************************/
/*
 *   There are two ways of strtok behaviour, when all characters of
 *   stringp are included in delim:
 *   1) strtok inner pointer clears (points to null)
 *   2) strtok inner buffer doesn't clear
 *       (remains unchanged from previous call)
 *
 *   The proposal to clarify the standard is registered as defect XXX.
 *
 *   Dependencies: util.conversion.token
 */
typedef enum PosixStrtokBufferClearsInterpretation
{
  POSIX_STRTOK_BUFFER_CLEARS_UNKNOWN,
  POSIX_STRTOK_BUFFER_CLEARS_NO,
  POSIX_STRTOK_BUFFER_CLEARS_YES,
} PosixStrtokBufferClearsInterpretation;

PosixStrtokBufferClearsInterpretation getPosixStrtokBufferClearsInterpretation(void);
void setPosixStrtokBufferClearsInterpretation( PosixStrtokBufferClearsInterpretation interpretation );

/********************************************************************/
/**                        util.search.tree                        **/
/********************************************************************/

/*
 *   There are two possible interpretations of the third parameter
 *   of function action called by the function twalk.
 *
 *   The first one is a level of a node in the full search tree.
 *   The second one is a level of a node in the subtree walked by
 *   the current call of twalk.
 *
 *   The proposal to clarify the standard is registered as defect XXX.
 *
 *   Dependencies: util.search.tree.
 */

typedef enum PosixSearchTreeWalkLevelInterpretation
{
  POSIX_SEARCH_TREE_WALK_LEVEL_UNKNOWN,
  POSIX_SEARCH_TREE_WALK_LEVEL_GLOBAL,
  POSIX_SEARCH_TREE_WALK_LEVEL_LOCAL
} PosixSearchTreeWalkLevelInterpretation;

PosixSearchTreeWalkLevelInterpretation getPosixSearchTreeWalkLevelInterpretation(void);
void setPosixSearchTreeWalkLevelInterpretation( PosixSearchTreeWalkLevelInterpretation interpretation );

/********************************************************************/
/**                        process.resources                       **/
/********************************************************************/

/*
 *   Behavior of ulimit(UL_SETFSIZE,..) differs for glibc and for LSB
 *
 *   In glibc this function returns 0 if successful.
 *   In LSB this function returns the value of the requested limit.
 *
 *   Dependencies: process.resources
 */

/* Behaviour config */

typedef enum UlimitBehaviorKind
{
  UlimitBehaviorLSB,
  UlimitBehaviorGlibc,
} UlimitBehaviorKind;

UlimitBehaviorKind getUlimitBehaviorKind(void);

void setUlimitBehaviorKind( UlimitBehaviorKind interpretation );
/********************************************************************/
/**                        process.resources                       **/
/********************************************************************/

/********************************************************************/
/**                   ISO POSIX 2003 Interpretations               **/
/********************************************************************/

/*
  The Open Group Base Specifications Issue 6
  IEEE Std 1003.1, 2004 Edition
  Copyright (c) 2001-2004 The IEEE and The Open Group, All Rights reserved.
*/

#endif
