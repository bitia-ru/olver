/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef LOCALE_MEDIA_SEH
#define LOCALE_MEDIA_SEH

#include "locale/locale/locale_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initLocaleLocaleSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/*** ::POSIX:: ***/

/** setlocale_spec **/
mediator setlocale_media for specification
CString* setlocale_spec(CallContext context, IntT category, CString* locale);

/** nl_langinfo_spec **/
mediator nl_langinfo_media for specification
CString* nl_langinfo_spec(CallContext context, NlItemT item);

/** localeconv_spec **/
mediator localeconv_media for specification
LConv* localeconv_spec(CallContext context);

/*** ::Linux Standard Base:: ***/

/** newlocale_spec **/
mediator newlocale_media for specification
LocaleT newlocale_spec (    CallContext context,
                            IntT category_mask,
                            CString* locale,
                            LocaleT base
                       );

/** freelocale_spec **/
mediator freelocale_media for specification
void freelocale_spec(CallContext context, LocaleT locale);

/** duplocale_spec **/
mediator duplocale_media for specification
LocaleT duplocale_spec(CallContext context, LocaleT locale);

/** uselocale_spec **/
mediator uselocale_media for specification
LocaleT uselocale_spec(CallContext context, LocaleT newloc);

/********************************************************************/
/**                      Helper Functions                          **/
/********************************************************************/


#endif
