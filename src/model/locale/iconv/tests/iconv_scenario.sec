/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "common/common_scenario.seh"
#include "locale/iconv/tests/iconv_scenario.seh"
#include "data/errno_model.seh"


/********************************************************************/
/**                     Test Scenario Parameters                   **/
/********************************************************************/
static const int maxSize = 32800;

/********************************************************************/
/**                       Test Scenario Data                       **/
/********************************************************************/
static CallContext context;
StringTPtr inbuf, outbuf;

/********************************************************************/
/**                         Auxiliary Types                        **/
/********************************************************************/

/********************************************************************/
/**                     Model State Operations                     **/
/********************************************************************/

/********************************************************************/
/**                Test Scenarios Generalized States               **/
/********************************************************************/

/********************************************************************/
/**                  Test Scenario Initialization                  **/
/********************************************************************/

void cleanup_iconv_simple_scenario()
{
    deallocateMemoryBlock(context, inbuf);
    deallocateMemoryBlock(context, outbuf);
}

bool init_iconv_simple_scenario(int argc, char** argv)
{
    context = getContext();

    inbuf = allocateMemoryBlock(context, maxSize);
    if (isNULL_VoidTPtr(inbuf))
        return false;

    outbuf = allocateMemoryBlock(context, maxSize);
    if (isNULL_VoidTPtr(outbuf))
    {
        deallocateMemoryBlock(context, inbuf);
        return false;
    }

    return true;
}

void finish_iconv_simple_scenario(void)
{
    cleanup_iconv_simple_scenario();
    TEST_SCENARIO_VERDICT_VERBOSE(locale_iconv_simple_scenario);
}

/********************************************************************/
/**                          Test Actions                          **/
/********************************************************************/

scenario
bool iconv_simple_scen()
{
    VoidTPtr inbuf_tmp;
    VoidTPtr outbuf_tmp;
    SizeT inbytesleft, outbytesleft;
    IconvTObj* cd;
    SizeT res;

    /*
     * Upon successful completion, iconv_open() shall return a conversion descriptor
     * for use on subsequent calls to iconv().
     */
    IMPLEMENT_REQ("iconv_open.05");

    inbuf_tmp = inbuf;
    outbuf_tmp = outbuf;
    inbytesleft = 5;
    outbytesleft = 100;
    writeCString_VoidTPtr(inbuf, create_CString("test"));

    cd = iconv_open_spec(context, create_CString("UTF-32LE"), create_CString("WINDOWS-1251"), errno_model);
    res = iconv_spec(context, cd, &inbuf_tmp, &inbytesleft, &outbuf_tmp, &outbytesleft, errno_model);
    iconv_close_spec(context, cd, errno_model);

    verbose("Conversion done. res: %d, inbytesleft: %d, outbytesleft: %d, errno: %d\n", (int)res, (int)inbytesleft, (int)outbytesleft, (int)*errno_model);

    return true;
}

/********************************************************************/
/**                    Test Scenario Definition                    **/
/********************************************************************/

scenario dfsm locale_iconv_simple_scenario =
{
    .init = init_iconv_simple_scenario,
    .finish = finish_iconv_simple_scenario,
//     .getState = (PtrGetState)getSimpleState,
//     .saveModelState = (PtrSaveModelState)saveSimpleState,
//     .restoreModelState = (PtrRestoreModelState)restoreSimpleState,
//     .isStationaryState = (PtrIsStationaryState)isInitModelStateStationary,
    .actions = {
            iconv_simple_scen,
            NULL
    }
};
