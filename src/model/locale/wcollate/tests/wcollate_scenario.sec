/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "common/common_scenario.seh"
#include "locale/wcollate/tests/wcollate_scenario.seh"


/********************************************************************/
/**                     Test Scenario Parameters                   **/
/********************************************************************/

/********************************************************************/
/**                       Test Scenario Data                       **/
/********************************************************************/
static CallContext context;

/********************************************************************/
/**                         Auxiliary Types                        **/
/********************************************************************/

/********************************************************************/
/**                     Model State Operations                     **/
/********************************************************************/

/********************************************************************/
/**                Test Scenarios Generalized States               **/
/********************************************************************/

/********************************************************************/
/**                  Test Scenario Initialization                  **/
/********************************************************************/

void cleanup_wcollate_simple_scenario()
{
}

bool init_wcollate_simple_scenario(int argc, char** argv)
{
    bool result = true;
    context = getContext();
    return result;
}

void finish_wcollate_simple_scenario(void)
{
    cleanup_wcollate_simple_scenario();
    TEST_SCENARIO_VERDICT_VERBOSE(wcollate_simple_scenario);
}

/********************************************************************/
/**                          Test Actions                          **/
/********************************************************************/

scenario
bool wcollate_simple_scen() 
{
    WString* test0 = createFromCharArray_WString("test0");
    WString* test1 = createFromCharArray_WString("test1");
    WString* test2 = createFromCharArray_WString("test2");
    WString* xtest0 = createFromCharArray_WString("");
    WString* xtest1 = createFromCharArray_WString("");
    WString* xtest2 = createFromCharArray_WString("");
    IntT res10, res11, res12;

    res10 = wcscoll_spec(context, test1, test0, errno_model);
    res11 = wcscoll_spec(context, test1, test1, errno_model);
    res12 = wcscoll_spec(context, test1, test2, errno_model);
    wcsxfrm_spec(context, xtest0, test0, 1, errno_model);
    wcsxfrm_spec(context, xtest0, test0, 100, errno_model);
    wcsxfrm_spec(context, xtest1, test1, 100, errno_model);
    wcsxfrm_spec(context, xtest2, test2, 100, errno_model);

    /*
     * The wcsxfrm() function shall transform the wide-character string pointed to by 
     * ws2 and place the resulting wide-character string into the array pointed to by 
     * ws1. The transformation shall be such that if wcscmp() is applied to two 
     * transformed wide strings, it shall return a value greater than, equal to, or 
     * less than 0, corresponding to the result of wcscoll() applied to the same two 
     * original wide-character strings.
     */
    REQ("wcsxfrm.01", "wcscmp after wcsxfrm should get the same result as wcscoll", compare(xtest1, xtest0) == res10);
    REQ("wcsxfrm.01", "wcscmp after wcsxfrm should get the same result as wcscoll", compare(xtest1, xtest1) == res11);
    REQ("wcsxfrm.01", "wcscmp after wcsxfrm should get the same result as wcscoll", compare(xtest1, xtest2) == res12);

    return true;
}

/********************************************************************/
/**                    Test Scenario Definition                    **/
/********************************************************************/

scenario dfsm wcollate_simple_scenario =
{
    .init = init_wcollate_simple_scenario,
    .finish = finish_wcollate_simple_scenario,
//     .getState = (PtrGetState)getSimpleState,
//     .saveModelState = (PtrSaveModelState)saveSimpleState,
//     .restoreModelState = (PtrRestoreModelState)restoreSimpleState,
//     .isStationaryState = (PtrIsStationaryState)isInitModelStateStationary,
    .actions = {
            wcollate_simple_scen,
            NULL
    }
};
