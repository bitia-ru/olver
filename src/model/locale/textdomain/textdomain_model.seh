/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef LOCALE_TEXTDOMAIN_MODEL_SEH
#define LOCALE_TEXTDOMAIN_MODEL_SEH

#include "common/common_model.seh"
#include "data/errno_model.seh"
#include "locale/textdomain/textdomain_config.h"
#include "data/locale_model.seh"

#define SUT_TEXTDOMAIN_TD_CODESET "UTF-8"

/********************************************************************/
/**                            Model State                         **/
/********************************************************************/

specification
typedef struct DomainSt
{
    CString* name;
    CString* path;
    CString* codeSet;
    Map*/*<IntTObj*, Map*<CString*, CString*> >*/ msgMaps;
    Map*/*<IntTObj*, Map*<CString*, List*<CString*> > >*/ nmsgMaps;
} Domain;

void       init_TextDomain (CallContext context);

Domain*      create_Domain (void);
void   clearMsgMaps_Domain (Domain* dom);
Map*         getMap_Domain (CallContext context);
Map*  getCodesetMap_Domain (CallContext context);
CString* getCurrent_Domain (CallContext context);
bool     setCurrent_Domain (CallContext context, CString* Name);
Domain*         get_Domain (CallContext context, CString* Name);
bool            put_Domain (CallContext context, CString* Name, Domain*  dom);
void     setCodeset_Domain (CallContext context, CString* Name, CString* codeSet);
CString*    codeset_Domain (CallContext context, CString* Name);
bool        setPath_Domain (CallContext context, CString* Name, CString* path);
CString*       path_Domain (CallContext context, CString* Name);
CString*    getText_Domain (CallContext context, CString* Name, CString* msg,
                                                                IntT     category);
bool        putText_Domain (CallContext context, CString* Name, CString* msg,
                                                                IntT     category,
                                                                CString* text);
CString*   ngetText_Domain (CallContext context, CString* Name, CString* msg,
                                                                IntT     category,
                                                                ULongT   n);
bool       nputText_Domain (CallContext context, CString* Name, CString* msg,
                                                                IntT     category,
                                                                ULongT   n,
                                                                CString* text);

bool updateBySystemState_Domain (CallContext context, CString* domainname);


CString*    getMsg_Domain (Domain* dom, CString* msg, IntT     category);
bool        putMsg_Domain (Domain* dom, CString* msg, IntT     category,
                                                      CString* text);
CString*   getNMsg_Domain (Domain* dom, CString* msg, IntT     category,
                                                      ULongT   n);
bool       putNMsg_Domain (Domain* dom, CString* msg, IntT     category,
                                                      ULongT   n,
                                                      CString* text);


Set*       init_SystemStateDomain (void);
Set*        get_SystemStateDomain (CallContext context);
Domain*    find_SystemStateDomain (CallContext context, CString* domainname, CString* path);
bool  putDomain_SystemStateDomain (CallContext context, CString* domainname,
                                                        CString* path);
bool     putMsg_SystemStateDomain (CallContext context, CString* domainname,
                                                        CString* path,
                                                        CString* msgid,
                                                        CString* text,
                                                        IntT     category);
bool    nputMsg_SystemStateDomain (CallContext context, CString* domainname,
                                                        CString* path,
                                                        CString* msgid,
                                                        CString* text,
                                                        IntT     category,
                                                        ULongT   n);
CString* getMsg_SystemStateDomain (CallContext context, CString* domainname,
                                                        CString* path,
                                                        CString* msgid,
                                                        IntT     category);
CString* ngetMsg_SystemStateDomain (CallContext context, CString* domainname,
                                                        CString* path,
                                                        CString* msgid,
                                                        IntT     category,
                                                        ULongT   n);


/********************************************************************/
/**                    Specification Functions                     **/
/********************************************************************/

typedef enum gettextT  {  gettextFunc,  dgettextFunc,  dcgettextFunc } gettextT;
typedef enum ngettextT { ngettextFunc, dngettextFunc, dcngettextFunc } ngettextT;

/** bind_textdomain_codeset_spec **/
specification
CString* bind_textdomain_codeset_spec   (
                                         CallContext context,
                                         CString*    domainname,
                                         CString*    codeset,
                                         ErrorCode   *errno
                                        );

/** bindtextdomain_spec **/
specification
CString* bindtextdomain_spec            (
                                         CallContext context,
                                         CString*    domainname,
                                         CString*    dirname,
                                         ErrorCode   *errno
                                        );

/** textdomain_spec **/
specification
CString* textdomain_spec                (
                                         CallContext context,
                                         CString*    domainname,
                                         ErrorCode   *errno
                                        );


/** dcgettext_spec **/
//This mediator refers to: gettext, dgettext, dcgettext
specification
CString* gettext_caller_spec            (
                                         CallContext context,
                                         CString*    domainname,
                                         CString*    msgid,
                                         IntT        category,
                                         ErrorCode   *errno,
                                         gettextT    funcType
                                        );

/** dcngettext_spec **/
//This mediator refers to: ngettext, dngettext, dcngettext
specification
CString* ngettext_caller_spec           (
                                         CallContext context,
                                         CString*    domainname,
                                         CString*    msgid1,
                                         CString*    msgid2,
                                         ULongT      n,
                                         IntT        category,
                                         ErrorCode   *errno,
                                         ngettextT   funcType
                                        );

#define gettext_spec(a, b, c) \
    gettext_caller_spec(a, NULL, b, SUT_LC_MESSAGES, c, gettextFunc)

#define dgettext_spec(a, b, c, d) \
    gettext_caller_spec(a, b, c, SUT_LC_MESSAGES, d, dgettextFunc)

#define dcgettext_spec(a, b, c, d, e) \
    gettext_caller_spec(a, b, c, d, e, dcgettextFunc)

#define ngettext_spec(a, b, c, d, e) \
    ngettext_caller_spec(a, NULL, b, c, d, SUT_LC_MESSAGES, e, ngettextFunc)

#define dngettext_spec(a, b, c, d, e, f) \
    ngettext_caller_spec(a, b, c, d, e, SUT_LC_MESSAGES, f, dngettextFunc)

#define dcngettext_spec(a, b, c, d, e, f, g) \
    ngettext_caller_spec(a, b, c, d, e, f, g, dcngettextFunc)


/********************************************************************/
/**                         Update Functions                       **/
/********************************************************************/

void onBindTextDomainCodeset          (
                                       CallContext context,
                                       CString*    domainname,
                                       CString*    codeset,
                                       ErrorCode   *errno,
                                       CString*    res
                                      );

void onBindTextDomain                 (
                                       CallContext context,
                                       CString*    domainname,
                                       CString*    dirname,
                                       ErrorCode   *errno,
                                       CString*    res
                                      );

void onTextDomain                     (
                                       CallContext context,
                                       CString*    domainname,
                                       ErrorCode   *errno,
                                       CString*    res
                                      );

void onGetText                        (
                                       CallContext context,
                                       CString*    domain,
                                       CString*    msgid,
                                       IntT        category,
                                       ErrorCode   *errno,
                                       CString*    res
                                      );

void onNGetText                       (
                                       CallContext context,
                                       CString*    domain,
                                       CString*    msgid1,
                                       CString*    msgid2,
                                       ULongT      n,
                                       IntT        category,
                                       ErrorCode   *errno,
                                       CString*    res
                                      );


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

#endif

