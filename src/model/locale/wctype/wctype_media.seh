/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef LOCALE_WCTYPE_MEDIA_SEH
#define LOCALE_WCTYPE_MEDIA_SEH

#include "locale/wctype/wctype_model.seh"


/********************************************************************/
/**                    Initialization Function                     **/
/********************************************************************/
void initLocaleWctypeSubsystem(void);


/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** iswalnum_spec **/
mediator iswalnum_media for specification
IntT iswalnum_spec(CallContext context, WIntT wc);

/** iswalpha_spec **/
mediator iswalpha_media for specification
IntT iswalpha_spec(CallContext context, WIntT wc);

/** iswblank_spec **/
mediator iswblank_media for specification
IntT iswblank_spec(CallContext context, WIntT wc);

/** iswcntrl_spec **/
mediator iswcntrl_media for specification
IntT iswcntrl_spec(CallContext context, WIntT wc);

/** iswctype_spec **/
mediator iswctype_media for specification
IntT iswctype_spec(CallContext context, WIntT wc, WCTypeT charclass);

/** iswdigit_spec **/
mediator iswdigit_media for specification
IntT iswdigit_spec(CallContext context, WIntT wc);

/** iswgraph_spec **/
mediator iswgraph_media for specification
IntT iswgraph_spec(CallContext context, WIntT wc);

/** iswlower_spec **/
mediator iswlower_media for specification
IntT iswlower_spec(CallContext context, WIntT wc);

/** iswprint_spec **/
mediator iswprint_media for specification
IntT iswprint_spec(CallContext context, WIntT wc);

/** iswpunct_spec **/
mediator iswpunct_media for specification
IntT iswpunct_spec(CallContext context, WIntT wc);

/** iswspace_spec **/
mediator iswspace_media for specification
IntT iswspace_spec(CallContext context, WIntT wc);

/** iswupper_spec **/
mediator iswupper_media for specification
IntT iswupper_spec(CallContext context, WIntT wc);

/** iswxdigit_spec **/
mediator iswxdigit_media for specification
IntT iswxdigit_spec(CallContext context, WIntT wc);

/** wctype_spec **/
mediator wctype_media for specification
WCTypeT wctype_spec(CallContext context, CString* property);

/** wcwidth_spec **/
mediator wcwidth_media for specification
IntT wcwidth_spec(CallContext context, WCharT wc);

/** wcswidth_spec **/
mediator wcswidth_media for specification
IntT wcswidth_spec(CallContext context, WCharArray* pwcs, SizeT n);



#endif

