/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef LOCALE_CTYPE_MODEL_SEH
#define LOCALE_CTYPE_MODEL_SEH

#include "common/common_model.seh"


extern UCharT  max_UCharT;

#define SUT_EOF (-1)

/********************************************************************/
/**                             Ctype                              **/
/********************************************************************/

typedef List LocSpec;

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

/** __ctype_b_loc_spec **/
specification
LocSpec* __ctype_b_loc_spec(CallContext context);

/** __ctype_get_mb_cur_max_spec **/
specification
SizeT __ctype_get_mb_cur_max_spec(CallContext context);

/** isalnum_spec **/
specification
IntT isalnum_spec(CallContext context, IntT c);

/** isalpha_spec **/
specification
IntT isalpha_spec(CallContext context, IntT c);

/** isascii_spec **/
specification
IntT isascii_spec(CallContext context, IntT c);

/** isblank_spec **/
specification
IntT isblank_spec(CallContext context, IntT c);

/** iscntrl_spec **/
specification
IntT iscntrl_spec(CallContext context, IntT c);

/** isdigit_spec **/
specification
IntT isdigit_spec(CallContext context, IntT c);

/** isgraph_spec **/
specification
IntT isgraph_spec(CallContext context, IntT c);

/** islower_spec **/
specification
IntT islower_spec(CallContext context, IntT c);

/** isprint_spec **/
specification
IntT isprint_spec(CallContext context, IntT c);

/** ispunct_spec **/
specification
IntT ispunct_spec(CallContext context, IntT c);

/** isspace_spec **/
specification
IntT isspace_spec(CallContext context, IntT c);

/** isupper_spec **/
specification
IntT isupper_spec(CallContext context, IntT c);

/** isxdigit_spec **/
specification
IntT isxdigit_spec(CallContext context, IntT c);


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

LocSpec* create_LocSpec();

#endif

