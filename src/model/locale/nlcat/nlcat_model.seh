/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef LOCALE_NLCAT_MODEL_SEH
#define LOCALE_NLCAT_MODEL_SEH

#include "common/common_model.seh"
#include "locale/nlcat/nlcat_config.h"

/********************************************************************/
/**                         Object In Memory                       **/
/********************************************************************/

specification typedef
struct CatObject
{
    // arguments, passed to catopen
    CString* strName;
    int oflag;

    // Set[id -> Msg[ id -> Message string ] ]
    Map* mapSet;
} CatObject;

CatObject * create_CatObject(
    CString* strName,
    int oflag,
    Map* mapSet
);

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

typedef VoidTPtr nl_catd;

/** catclose_spec **/
specification
IntT catclose_spec(CallContext context, nl_catd catd, ErrorCode* errno);
void onCatClose(CallContext context, nl_catd catd, IntT res);

/** catgets_spec **/
specification
CString* catgets_spec(CallContext context, nl_catd catd, IntT set_id, IntT msg_id, CString* s, ErrorCode* errno);
void onCatGets(CallContext context, nl_catd catd, IntT set_id, IntT msg_id, CString* s, CString* res);

/** catopen_spec **/
specification
nl_catd catopen_spec(CallContext context, CString* Name, IntT oflag, ErrorCode* errno);
void onCatOpen(CallContext context, CString* Name, IntT oflag, nl_catd res);


/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/

CString* getCatMessage(nl_catd catd, IntT set_id, IntT msg_id);

#endif

