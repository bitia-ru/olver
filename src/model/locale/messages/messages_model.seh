/*
 * Copyright (c) 2005-2006 Institute for System Programming
 * Russian Academy of Sciences
 * All rights reserved. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#ifndef LOCALE_MESSAGES_MODEL_SEH
#define LOCALE_MESSAGES_MODEL_SEH

#include "common/common_model.seh"
#include "locale/messages/messages_config.h"

/********************************************************************/
/**                      Interface Functions                       **/
/********************************************************************/

specification typedef CString* PCString;

PCString * create_PCString(CString * str);

/** perror_spec **/
specification
void perror_spec(CallContext context, CString* s, ErrorCode* errno);

/** strerror_spec **/
//This specification refers to: strerror_r, strerror
specification
CString* strerror_spec(CallContext context, IntT errnum, CString** strerrbuf,
    SizeT buflen, ErrorCode* errno);

void onStrError(CallContext context, IntT errnum, CString** strerrbuf,
    SizeT buflen, ErrorCode* errno, CString* res);

/********************************************************************/
/**                       Helper Functions                         **/
/********************************************************************/
PCString* getStdErr(CallContext context);
void putErrorMessage(CallContext context, IntT errnum, CString* msg);
Bool3 isEINVALstrerror(IntT errnum);

#endif
